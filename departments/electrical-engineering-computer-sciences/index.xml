<?xml version="1.0"?>
<courseleaf>

<title>Electrical Engineering and Computer Sciences</title>


<text>
<![CDATA[  
<h2>Overview</h2>
<p>The Department of Electrical Engineering and Computer Sciences (EECS) offers one of the strongest research and instructional programs in this field anywhere in the world. Our key strength is our array of cross-disciplinary, team-driven projects. The integration of Electrical Engineering (EE) and Computer Science (CS) forms the core, with strong interactions that extend into the biological sciences, mechanical and civil engineering, the physical sciences, chemistry, mathematics, and operations research. Our programs have been consistently ranked in the top three nationwide and worldwide by various organizations.</p>
<p>Each year, top students from all parts of the world are attracted to Berkeley's EECS program by the excellence of the faculty, the breadth of the educational opportunities in EECS and across the campus, our proximity to the vibrant California tech sector, and the Berkeley environment. The department's close ties to the industry, coupled with its commitment to engineering research and education, ensure that students receive a rigorous, relevant, and broad education.</p>
<p>Faculty members at Berkeley are committed to research and discovery at the highest level, informed and creative teaching, and the creative desire to excel. The distinction of the EECS faculty has been recognized in a long list of prestigious honors and awards, including two National Medals of Science, six ACM Turing Awards, four IEEE Medals of Honor, 44 members of the National Academy of Engineering, eighteen members of the National Academy of Sciences, and 26 fellows of the American Academy of Arts and Sciences.</p>
<p>Unlike many institutions of similar stature, regular faculty teach the vast majority of our courses, and the most exceptional teachers are often also the most exceptional researchers. The department's list of active teaching faculty includes seven winners of the prestigious Berkeley Campus Distinguished Teaching Award.</p>
<p>The mission of the EECS Department has three parts:</p>
<ol>
	<li>Educating future leaders in academia, government, industry, and entrepreneurial pursuit, through a rigorous curriculum of theory and application that develops the ability to solve problems, individually and in teams</li>
	<li>Creating knowledge of fundamental principles and innovative technologies, through research within the core areas of EECS, and in collaboration with other disciplines, that is distinguished by its impact on academia, industry, and society</li>
	<li>Serving the communities to which we belong, at local, national, and international levels, with a deep awareness of our ethical responsibilities to our profession and to society</li>
</ol>
<p>Our strategy to accomplish this mission is simple: recruit and retain the very best faculty, students, and staff, and then empower them to direct and drive the creation and dissemination of knowledge. We know that we have succeeded in this mission when our students succeed, becoming leaders and serving society.</p>
<p>Electrical Engineering began on the Berkeley campus more than a century ago, with the hiring of its first electrical engineer, Clarence Cory, into the College of Mechanics. The early days focused on electric power production and distribution, and Cory’s laboratory, in fact, provided the first light and power for the entire campus.</p>
<p>The evolution since then has been dramatic, accelerating rapidly in the latter half of the twentieth century. The development of our world-class computer science faculty followed naturally from the synergies between electronics, systems theory, and computing. In the twenty-first century, EECS has become a broader field, defined more by its intellectual approach to engineering problems than by particular technical solutions. Broadly, EECS harnesses physical processes to perform logical functions, and hence easily extends beyond its core technological base in electronics to, for example, biological systems.</p>
<p>We have current strengths in biosystems and computational biology, nanotechnology, artificial intelligence, concurrent and distributed systems, embedded systems, novel devices (such as organic semiconductors), robotics, advanced networking, computer security and trusted computing, energy, and sensor networks, which complement beautifully our more traditional strengths in physical electronics, integrated circuits, operating systems and networking, graphics and human-computer interaction, communications systems, computer architecture, control theory, signal processing, the theory of computing, programming languages, scientific computing, electronic design automation, power systems, and database management systems. Many of our current research projects are focused on enormous societal challenges and opportunities such as energy efficiency, network intelligence, transportation systems, security, and health care. </p>
<p>Our graduate programs emphasize research, preparing students for leadership positions in industrial labs, government, or academia. Our laboratory and computing facilities are among the best anywhere and have conceived many transformative inventions. Our research programs are well funded, and nearly all of our PhD students receive full financial support.</p>
<h3>Undergraduate Programs</h3>
<p><a href="http://guide.berkeley.edu/archive/2022-23/undergraduate/degree-programs/computer-science/">Computer Science</a>: BA (major program offered through the College of Letters and Science), Minor<br/>
<a href="http://guide.berkeley.edu/archive/2022-23/undergraduate/degree-programs/electrical-engineering-computer-sciences/">Electrical Engineering and Computer Sciences</a>: BS, Minor<br/>
<a href="http://guide.berkeley.edu/archive/2022-23/undergraduate/degree-programs/electronic-intelligent-systems/">Electronic Intelligent Systems</a>: Minor<br/>
<a href="http://guide.berkeley.edu/archive/2022-23/undergraduate/degree-programs/electrical-engineering-computer-sciences-materials/">Electrical Engineering and Computer Sciences/Materials Science and Engineering</a>: BS (Joint Major)<br/>
<a href="http://guide.berkeley.edu/archive/2022-23/undergraduate/degree-programs/electrical-engineering-computer-sciences-nuclear-joint-major/">Electrical Engineering and Computer Sciences/Nuclear Engineering</a>: BS (Joint Major)</p>
<h3>Graduate Programs</h3>
<p><a href="http://guide.berkeley.edu/archive/2022-23/graduate/degree-programs/computer-science/">Computer Science</a>: MS, MEng, PhD<br/>
<a href="http://guide.berkeley.edu/archive/2022-23/graduate/degree-programs/electrical-engineering-computer-sciences/">Electrical Engineering and Computer Sciences</a>: MEng, MS, PhD</p>
  
]]>
</text>
<coursestext name="Courses">
<![CDATA[
<h3>Select a subject to view courses</h3>
<ul>
	<li><a href="http://guide.berkeley.edu/departments/electrical-engineering-computer-sciences/#EECS">Electrical Engineering and Computer Sciences</a></li>
	<li><a href="http://guide.berkeley.edu/departments/electrical-engineering-computer-sciences/#computer-science">Computer Science</a></li>
	<li><a href="http://guide.berkeley.edu/departments/electrical-engineering-computer-sciences/#electrical-engineering-computer-sciences">Electrical Engineering</a></li>
</ul>
<h3><a id="EECS" name="EECS"/>Electrical Engineering and Computer Sciences</h3>
<div id="sc_sccoursedescs">
<div class="coursedescs_toggleAll notinpdf"><button class="btn_expandAll">Expand all course descriptions [+]</button><button class="btn_collapseAll">Collapse all course descriptions [-]</button></div>
<div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs16a" data-toggle="#cb_eecs16a">
<h3 class="courseblocktitle">
<span class="code">EECS 16A</span> 
<span class="title">Designing Information Devices and Systems I</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs16a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
This course and its follow-on course EECS16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens</span><span class="deschide"> mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.</span><br/>
 <a href="" class="btn-readmore"><span>Designing Information Devices and Systems I:</span> Read More [+]</a></p>
<div id="57" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 1A">MATH 1A</span> and <span class="code_bubble" data-code-bubble="MATH 1B">MATH 1B</span> (1B may be taken concurrently); <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> (encouraged to be taken concurrently)</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 2 hours of discussion, and 3 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 4 hours of discussion, and 6 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and three hours of laboratory and two hours of discussion per week. Six hours of lecture and six hours of laboratory and four hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Arcak, Ayazifar, Maharbiz, Niknejad, Ranade, Sahai, Subramanian, Tomlin</p><p><strong>Formerly known as:</strong> Electrical Engineering 16A</p></div>
<p><a href="" class="btn-readless"><span>Designing Information Devices and Systems I:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs16b" data-toggle="#cb_eecs16b">
<h3 class="courseblocktitle">
<span class="code">EECS 16B</span> 
<span class="title">Designing Information Devices and Systems II</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs16b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
This course is a follow-on to <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in machine learning, circuit design, control, and signal processing while developing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a</span><span class="deschide"> way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper exercises. The courses are aimed at entering students as well as non-majors seeking a broad introduction to the field.</span><br/>
 <a href="" class="btn-readmore"><span>Designing Information Devices and Systems II:</span> Read More [+]</a></p>
<div id="977" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 2 hours of discussion, and 3 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 4 hours of discussion, and 6 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and two hours of discussion and three hours of laboratory per week. Six hours of lecture and four hours of discussion and six hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Ayazifar, Lustig, Maharbiz, Subramanian, Tomlin</p><p><strong>Formerly known as:</strong> Electrical Engineering 16B</p></div>
<p><a href="" class="btn-readless"><span>Designing Information Devices and Systems II:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs47d" data-toggle="#cb_eecs47d">
<h3 class="courseblocktitle">
<span class="code">EECS 47D</span> 
<span class="title">Completion of work in Electrical Engineering 16A</span> 
<span class="hours">1 - 3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs47d">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2021<br/>
This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16A and be ready for EE16B or EE47E. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity</span><span class="deschide">, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of work in Electrical Engineering 16A:</span> Read More [+]</a></p>
<div id="473" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 1A">MATH 1A</span>, <span class="code_bubble" data-code-bubble="MATH 1B">MATH 1B</span>, <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> (encouraged to be taken concurrently), college level courses in linear algebra and/or circuit theory, and consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-8 hours of self-paced per week</p><p><strong>Summer:</strong> 8 weeks - 4-13 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Two to eight hours of self-paced per week. Four to thirteen hours of self-paced per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Arcak, Ayazifar, Maharbiz, Niknejad, Ranade, Sahai, Subramanian, Tomlin</p></div>
<p><a href="" class="btn-readless"><span>Completion of work in Electrical Engineering 16A:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs47e" data-toggle="#cb_eecs47e">
<h3 class="courseblocktitle">
<span class="code">EECS 47E</span> 
<span class="title">Completion of work in Electrical Engineering 16B</span> 
<span class="hours">1 - 3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs47e">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Prior to 2007<br/>
This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16B. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing (DFT), learning (SVD/PCA), feedback control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity, and</span><span class="deschide"> in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of work in Electrical Engineering 16B:</span> Read More [+]</a></p>
<div id="570" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 1A">MATH 1A</span>, <span class="code_bubble" data-code-bubble="MATH 1B">MATH 1B</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>; and <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 47D">EECS 47D</span>, or <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>; college level courses in linear algebra and/or circuit theory, and consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3-8 hours of self-paced per week</p><p><strong>Summer:</strong> 8 weeks - 6-16 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Three to eight hours of self-paced per week. Six to sixteen hours of self-paced per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Arcak, Ayazifar, Maharbiz, Niknejad, Ranade, Sahai, Subramanian, Tomlin</p></div>
<p><a href="" class="btn-readless"><span>Completion of work in Electrical Engineering 16B:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs47f" data-toggle="#cb_eecs47f">
<h3 class="courseblocktitle">
<span class="code">EECS 47F</span> 
<span class="title">Completion of work in Computer Science 70</span> 
<span class="hours">1 - 3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs47f">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Prior to 2007<br/>
This course allows students who have had a discrete math and/or probability course to complete the work in CS70. Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples</span><span class="deschide"> include load balancing, existence arguments, Bayesian inference.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of work in Computer Science 70:</span> Read More [+]</a></p>
<div id="640" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Sophomore mathematical maturity, programming experience equivalent to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, a prior college level course on discrete math and/or probability, and consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3-8 hours of self-paced per week</p><p><strong>Summer:</strong> 8 weeks - 6-16 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Three to eight hours of self-paced per week. Six to sixteen hours of self-paced per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Ranade, Rao, Sahai, Seshia, Vazirani, Walrand</p></div>
<p><a href="" class="btn-readless"><span>Completion of work in Computer Science 70:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecsc106a" data-toggle="#cb_eecsc106a">
<h3 class="courseblocktitle">
<span class="code">EECS C106A</span> 
<span class="title">Introduction to Robotics</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecsc106a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2021, Fall 2020, Fall 2019<br/>
This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward &amp; inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, &amp; control. We will present techniques for geometric motion planning &amp; obstacle avoidance. Open problems in trajectory generation with dynamic</span><span class="deschide"> constraints will also be discussed. The course also presents the use of the same analytical techniques as manipulation for the analysis of images &amp; computer vision. Low level vision, structure from motion, &amp; an introduction to vision &amp; learning will be covered. The course concludes with current applications of robotics.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Robotics:</span> Read More [+]</a></p>
<div id="439" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Familiarity with linear algebra at the level of <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>/<span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span> or Math 54. Experience coding in python at the level of <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>. Preferred: experience developing software at the level of <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and experience using Linux</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering and Computer Science C106A/Bioengineering C106A after completing EE C106A/BioE C125, Electrical Engineering 206A, or Electrical Engineering and Computer Science 206A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 2 hours of discussion, and 6 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and three hours of laboratory per week. Six hours of lecture and two hours of discussion and six hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructor:</strong> Sastry</p><p><strong>Also listed as:</strong> BIO ENG C106A/MEC ENG C106A</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Robotics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecsc106b" data-toggle="#cb_eecsc106b">
<h3 class="courseblocktitle">
<span class="code">EECS C106B</span> 
<span class="title">Robotic Manipulation and Interaction</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecsc106b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2022, Spring 2021, Spring 2020, Spring 2019<br/>
The course is a sequel to EECS/BIOE/MEC106A/EECSC206A, which covers the mathematical fundamentals of robotics including kinematics, dynamics and control as well as an introduction to path planning, obstacle avoidance, and computer vision. This course will present several areas of robotics and active vision, at a deeper level and informed by current research. Concepts will include the review at an advanced level of</span><span class="deschide"> robot control, the kinematics, dynamics and control of multi-fingered hands, grasping and manipulation of objects, mobile robots: including non-holonomic motion planning and control, path planning, Simultaneous Localization And Mapping (SLAM), and active vision. Additional research topics covered at the instructor's discretion.</span><br/>
 <a href="" class="btn-readmore"><span>Robotic Manipulation and Interaction:</span> Read More [+]</a></p>
<div id="635" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS C106A">EECS C106A</span> / <span class="code_bubble" data-code-bubble="BIO ENG C106A">BIO ENG C106A</span> / <span class="code_bubble" data-code-bubble="MEC ENG C106A">MEC ENG C106A</span> / <span class="code_bubble" data-code-bubble="EECS C206A">EECS C206A</span> or an equivalent course. A strong programming background, knowledge of Python and Matlab, and some coursework in feedback controls (such as <span class="code_bubble" data-code-bubble="EL ENG C128">EL ENG C128</span> / <span class="code_bubble" data-code-bubble="MEC ENG C134">MEC ENG C134</span>) are also useful. Students who have not taken the prerequisite course should have a strong programming background, knowledge of Python and Matlab, and exposure to linear algebra, Lagrangian dynamics, and feedback controls at the intermediate level. <span class="code_bubble" data-code-bubble="EECS C106A">EECS C106A</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering and Computer Science C106B/Bioengineering C106B after completing Electrical Engineering C106B/Bioengineering C125B, Electrical Engineering 206B, or Electrical Engineering and Computer Science 206B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructor:</strong> Sastry</p><p><strong>Also listed as:</strong> BIO ENG C106B/MEC ENG C106B</p></div>
<p><a href="" class="btn-readless"><span>Robotic Manipulation and Interaction:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs126" data-toggle="#cb_eecs126">
<h3 class="courseblocktitle">
<span class="code">EECS 126</span> 
<span class="title">Probability and Random Processes</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs126">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains.</span><br/>
 <a href="" class="btn-readmore"><span>Probability and Random Processes:</span> Read More [+]</a></p>
<div id="460" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> preferred but not required; Familiarity with linear algebra</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="EECS 126">EECS 126</span> after completing EE 126.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Ramchandran</p></div>
<p><a href="" class="btn-readless"><span>Probability and Random Processes:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs127" data-toggle="#cb_eecs127">
<h3 class="courseblocktitle">
<span class="code">EECS 127</span> 
<span class="title">Optimization Models in Engineering</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs127">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization.</span><br/>
 <a href="" class="btn-readmore"><span>Optimization Models in Engineering:</span> Read More [+]</a></p>
<div id="173" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="EECS 127">EECS 127</span> after taking <span class="code_bubble" data-code-bubble="EECS 227AT">EECS 227AT</span> or Electrical Engineering 127/227AT.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> El Ghaoui</p><p><strong>Formerly known as:</strong> Electrical Engineering 127</p></div>
<p><a href="" class="btn-readless"><span>Optimization Models in Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs149" data-toggle="#cb_eecs149">
<h3 class="courseblocktitle">
<span class="code">EECS 149</span> 
<span class="title">Introduction to Embedded and Cyber Physical Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs149">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component</span><span class="deschide">, with emphasis on a semester-long sequence of projects.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Embedded and Cyber Physical Systems:</span> Read More [+]</a></p>
<div id="566" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> To develop the skills to realize embedded systems that are safe, reliable, and efficient in their use of resources.<br/>To learn how to model and design the joint dynamics of software, networks, and physical processes.<br/>To learn to think critically about technologies that are available for achieving such joint dynamics.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span> and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span>; <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, or permission of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Seshia, Lee, Dutta</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Embedded and Cyber Physical Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs151" data-toggle="#cb_eecs151">
<h3 class="courseblocktitle">
<span class="code">EECS 151</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs151">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The</span><span class="deschide"> class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects.<br/>
The class has two lab options: ASIC Lab (<span class="code_bubble" data-code-bubble="EECS 151LA">EECS 151LA</span>) and FPGA Lab (<span class="code_bubble" data-code-bubble="EECS 151LB">EECS 151LB</span>). Students must enroll in at least one of the labs concurrently with the class.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits:</span> Read More [+]</a></p>
<div id="209" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> The Verilog hardware description language is introduced and used. Basic digital system design concepts, Boolean operations/combinational logic, sequential elements and finite-state-machines, are described. Design of larger building blocks such as arithmetic units, interconnection networks, input/output units, as well as memory design (SRAM, Caches, FIFOs) and integration are also covered. Parallelism, pipelining and other micro-architectural optimizations are introduced. A number of physical design issues visible at the architecture level are covered as well, such as interconnects, power, and reliability.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p><p><strong>Credit Restrictions:</strong> Students must enroll concurrently in at least one the lab flavors EECS151LA or EECS151LB. Students wishing to take a second lab flavor next term can sign-up only for that Lab section and receive a Letter grade. The pre-requisite for “Lab-only” enrollment that term will be EECS151 from previous terms.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs151la" data-toggle="#cb_eecs151la">
<h3 class="courseblocktitle">
<span class="code">EECS 151LA</span> 
<span class="title">Application Specific Integrated Circuits Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs151la">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped</span><span class="deschide"> to simulation and layout specification.</span><br/>
 <a href="" class="btn-readmore"><span>Application Specific Integrated Circuits Laboratory:</span> Read More [+]</a></p>
<div id="266" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> Software testing of digital designs is covered leading to a set of exercises that cover the design flow. Digital synthesis, floor-planning, placement and routing are covered, as well as tools to evaluate timing and power consumption. Chip-level assembly is covered, including instantiation of custom blocks: I/O pads, memories, PLLs, etc.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>, <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Application Specific Integrated Circuits Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs151lb" data-toggle="#cb_eecs151lb">
<h3 class="courseblocktitle">
<span class="code">EECS 151LB</span> 
<span class="title">Field-Programmable Gate Array Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs151lb">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms. A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow. Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail. The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor</span><span class="deschide"> system, with caches, graphics acceleration, and external peripheral components. The design is mapped and demonstrated on an FPGA hardware platform.</span><br/>
 <a href="" class="btn-readmore"><span>Field-Programmable Gate Array Laboratory:</span> Read More [+]</a></p>
<div id="299" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Field-Programmable Gate Array Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecsc206a" data-toggle="#cb_eecsc206a">
<h3 class="courseblocktitle">
<span class="code">EECS C206A</span> 
<span class="title">Introduction to Robotics</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecsc206a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022<br/>
This course is an introduction to the field of robotics. It covers the fundamentals of kinematics, dynamics, control of robot manipulators, robotic vision, sensing, forward &amp; inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, &amp; control. We will present techniques for geometric motion planning &amp; obstacle avoidance. Open problems in trajectory generation with dynamic constraints will also be discussed.</span><span class="deschide"> The course also presents the use of the same analytical techniques as manipulation for the analysis of images &amp; computer vision. Low level vision, structure from motion, &amp; an introduction to vision &amp; learning will be covered. The course concludes with current applications of robotics.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Robotics:</span> Read More [+]</a></p>
<div id="609" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Familiarity with linear algebra at level of <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>/<span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span> or <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>. Experience doing coding in python at the level of <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>. Preferred: experience developing software at level of <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and experience using Linux. EECS 120 is not required, but some knowledge of linear systems may be helpful for the control of robots</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Sastry, Sreenath</p><p><strong>Formerly known as:</strong> Electrical Engin and Computer Sci 206A</p><p><strong>Also listed as:</strong> MEC ENG C206A</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Robotics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecsc206b" data-toggle="#cb_eecsc206b">
<h3 class="courseblocktitle">
<span class="code">EECS C206B</span> 
<span class="title">Robotic Manipulation and Interaction</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecsc206b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023<br/>
This course is a sequel to <span class="code_bubble" data-code-bubble="EECS C106A">EECS C106A</span>/206A, which covers kinematics,<br/>
dynamics and control of a single robot. This course will cover dynamics and control of groups of robotic<br/>
manipulators coordinating with each other and interacting with the environment. Concepts will include<br/>
an introduction to grasping and the constrained manipulation, contacts and force control for interaction<br/>
with the environment. We will also cover active perception guided manipulation</span><span class="deschide">, as well as the<br/>
manipulation of non-rigid objects. Throughout, we will emphasize design and human-robot<br/>
interactions, and applications to applications in manufacturing, service robotics, tele-surgery, and<br/>
locomotion.</span><br/>
 <a href="" class="btn-readmore"><span>Robotic Manipulation and Interaction:</span> Read More [+]</a></p>
<div id="157" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Students are expected to have taken <span class="code_bubble" data-code-bubble="EECS C106A">EECS C106A</span> / BioE C106A / ME C106A / ME C206A/ <span class="code_bubble" data-code-bubble="EECS C206A">EECS C206A</span> or an equivalent course. A strong programming background, knowledge of Python and Matlab, and some coursework in feedback controls (such as EE C128 / ME C134) are also useful. Students who have not taken <span class="code_bubble" data-code-bubble="EECS C106A">EECS C106A</span> / BioE C106A / ME C106A / ME C206A/ <span class="code_bubble" data-code-bubble="EECS C206A">EECS C206A</span> should have a strong programming background, knowledge of Python and Matlab, and exposure to linear algebra, and Lagrangian dynamics</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Bajcsy, Sastry</p><p><strong>Formerly known as:</strong> Electrical Engin and Computer Sci 206B</p><p><strong>Also listed as:</strong> MEC ENG C206B</p></div>
<p><a href="" class="btn-readless"><span>Robotic Manipulation and Interaction:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs208" data-toggle="#cb_eecs208">
<h3 class="courseblocktitle">
<span class="code">EECS 208</span> 
<span class="title">Computational Principles for High-dimensional Data Analysis</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs208">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
Introduction to fundamental geometric and statistical concepts and principles of low-dimensional models for high-dimensional signal and data analysis, spanning basic theory, efficient algorithms, and diverse real-world applications. Systematic study of both sampling complexity and computational complexity for sparse, low-rank, and low-dimensional models – including important cases such as matrix completion, robust principal component analysis,</span><span class="deschide"> dictionary learning, and deep networks.</span><br/>
 <a href="" class="btn-readmore"><span>Computational Principles for High-dimensional Data Analysis:</span> Read More [+]</a></p>
<div id="652" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> The following courses are recommended undergraduate linear algebra (Math 110), statistics (Stat 134), and probability (EE126). Back-ground in signal processing (ELENG 123), optimization (ELENG C227T), machine learning (CS189/289), and computer vision (<span class="code_bubble" data-code-bubble="COMPSCI C280">COMPSCI C280</span>) may allow you to appreciate better certain aspects of the course material, but not necessary all at once. The course is open to senior undergraduates, with consent from the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Ma</p></div>
<p><a href="" class="btn-readless"><span>Computational Principles for High-dimensional Data Analysis:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs219a" data-toggle="#cb_eecs219a">
<h3 class="courseblocktitle">
<span class="code">EECS 219A</span> 
<span class="title">Numerical Simulation and Modeling</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs219a">

<p class="courseblockdesc"><span class="descshow">Terms offered: Not yet offered<br/>
Numerical simulation and modeling are enabling technologies that pervade science and engineering. This course provides a detailed introduction to the fundamental principles of these technologies and their translation to engineering practice. The course emphasizes hands-on programming in MATLAB and application to several domains, including circuits, nanotechnology, and biology.</span><br/>
 <a href="" class="btn-readmore"><span>Numerical Simulation and Modeling:</span> Read More [+]</a></p>
<div id="592" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor; a course in linear algebra and on circuits is very useful</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for EL ENG 219A after completing EL ENG 219.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 4 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Four hours of lecture per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Roychowdhury</p><p><strong>Formerly known as:</strong> Electrical Engineering 219A</p></div>
<p><a href="" class="btn-readless"><span>Numerical Simulation and Modeling:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs219c" data-toggle="#cb_eecs219c">
<h3 class="courseblocktitle">
<span class="code">EECS 219C</span> 
<span class="title">Formal Methods: Specification, Verification, and Synthesis</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs219c">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Introduction to the theory and practice of formal methods for the design and analysis of systems, with a focus on algorithmic techniques. Covers selected topics in computational logic and automata theory including modeling and specification formalisms, temporal logics, satisfiability solving, model checking, synthesis, learning, and theorem proving. Applications to software and hardware design, cyber-physical systems, robotics, computer security</span><span class="deschide">, and other areas will be explored as time permits.</span><br/>
 <a href="" class="btn-readmore"><span>Formal Methods: Specification, Verification, and Synthesis:</span> Read More [+]</a></p>
<div id="125" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Graduate standing or consent of instructor; <span class="code_bubble" data-code-bubble="COMPSCI 170">COMPSCI 170</span> is recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Seshia</p><p><strong>Formerly known as:</strong> Electrical Engineering 219C</p></div>
<p><a href="" class="btn-readless"><span>Formal Methods: Specification, Verification, and Synthesis:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs225a" data-toggle="#cb_eecs225a">
<h3 class="courseblocktitle">
<span class="code">EECS 225A</span> 
<span class="title">Statistical Signal Processing</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs225a">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Fall 2021, Fall 2020<br/>
This course connects classical statistical signal processing (Hilbert space filtering theory by Wiener and Kolmogorov, state space model, signal representation, detection and estimation, adaptive filtering) with modern statistical and machine learning theory and applications. It focuses on concrete algorithms and combines principled theoretical thinking with real applications.</span><br/>
 <a href="" class="btn-readmore"><span>Statistical Signal Processing:</span> Read More [+]</a></p>
<div id="31" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span> and <span class="code_bubble" data-code-bubble="EECS 126">EECS 126</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Jiao, Waller</p><p><strong>Formerly known as:</strong> Electrical Engineering 225A</p></div>
<p><a href="" class="btn-readless"><span>Statistical Signal Processing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs225b" data-toggle="#cb_eecs225b">
<h3 class="courseblocktitle">
<span class="code">EECS 225B</span> 
<span class="title">Digital Image Processing</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs225b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2020<br/>
This course deals with computational methods as applied to digital imagery. It focuses on image sensing and acquisition, image sampling and quantization; spatial transformation, linear and nonlinear filtering; introduction to convolutional neural networks, and GANs; applications of deep learning methods to image processing problems; image enhancement, histogram equalization, image restoration, Weiner filtering, tomography, image reconstruction</span><span class="deschide"> from projections and partial Fourier information, Radon transform, multiresolution analysis, continuous and discrete wavelet transform and computation, subband coding, image and video compression, sparse signal approximation, dictionary techniques, image and video compression standards, and more.</span><br/>
 <a href="" class="btn-readmore"><span>Digital Image Processing:</span> Read More [+]</a></p>
<div id="535" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Basic knowledge of signals and systems, convolution, and Fourier Transform</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Zakhor</p><p><strong>Formerly known as:</strong> Electrical Engineering 225B</p></div>
<p><a href="" class="btn-readless"><span>Digital Image Processing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs227at" data-toggle="#cb_eecs227at">
<h3 class="courseblocktitle">
<span class="code">EECS 227AT</span> 
<span class="title">Optimization Models in Engineering</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs227at">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization.</span><br/>
 <a href="" class="btn-readmore"><span>Optimization Models in Engineering:</span> Read More [+]</a></p>
<div id="609" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span> or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="EECS 227AT">EECS 227AT</span> after taking <span class="code_bubble" data-code-bubble="EECS 127">EECS 127</span> or Electrical Engineering 127/227AT.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> El Ghaoui</p><p><strong>Formerly known as:</strong> Electrical Engineering 227AT</p></div>
<p><a href="" class="btn-readless"><span>Optimization Models in Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs251a" data-toggle="#cb_eecs251a">
<h3 class="courseblocktitle">
<span class="code">EECS 251A</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs251a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
An introduction to digital circuit and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits).</span><span class="deschide"> The class includes extensive use of industrial grade design automation and verification tools for assignments, labs, and projects.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits:</span> Read More [+]</a></p>
<div id="566" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> The Verilog hardware description language is introduced and used. Basic digital system design concepts, Boolean operations/combinational logic, sequential elements and finite-state-machines, are described. Design of larger building blocks such as arithmetic units, interconnection networks, input/output units, as well as memory design (SRAM, Caches, FIFOs) and integration are also covered. Parallelism, pipelining and other micro-architectural optimizations are introduced. A number of physical design issues visible at the architecture level are covered as well, such as interconnects, power, and reliability.</p><p><strong>Student Learning Outcomes:</strong> Although the syllabus is the same as EECS151, the assignments and exams for EECS251A will have harder problems that test deeper understanding expected from a graduate level course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>; <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; and recommended: <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span>. Students must enroll concurrently in at least one the laboratory flavors <span class="code_bubble" data-code-bubble="EECS 251LA">EECS 251LA</span> or <span class="code_bubble" data-code-bubble="EECS 251LB">EECS 251LB</span>. Students wishing to take a second laboratory flavor next term can sign-up only for that laboratory section and receive a letter grade. The prerequisite for “Lab-only” enrollment that term will be <span class="code_bubble" data-code-bubble="EECS 251A">EECS 251A</span> from previous terms</p><p><strong>Credit Restrictions:</strong> Students must enroll concurrently in at least one the laboratory flavors Electrical Engineering and Computer Science 251LA or Electrical Engineering and Computer Science 251LB. Students wishing to take a second laboratory flavor next term can sign-up only for that laboratory section and receive a letter grade. The pre-requisite for “Lab-only” enrollment that term will be Electrical Engineering and Computer Science 251A from previous terms.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p><p><strong>Formerly known as:</strong> Electrical Engineering 241A</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs251b" data-toggle="#cb_eecs251b">
<h3 class="courseblocktitle">
<span class="code">EECS 251B</span> 
<span class="title">Advanced Digital Integrated Circuits and Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs251b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2022<br/>
This course aims to convey a knowledge of advanced concepts of digital circuit and system-on-a-chip design in state-of-the-art technologies. Emphasis is on the circuit and system design and optimization for both energy efficiency and high performance for use in a broad range of applications, from edge computing to datacenters. Special attention will be devoted to the most important challenges facing digital circuit designers in the coming decade. The</span><span class="deschide"> course is accompanied with practical laboratory exercises that introduce students to modern tool flows.</span><br/>
 <a href="" class="btn-readmore"><span>Advanced Digital Integrated Circuits and Systems:</span> Read More [+]</a></p>
<div id="902" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Introduction to Digital Design and Integrated Circuits, EECS151 (taken with either EECS151LA or EECS151LB lab) or EECS251A (taken with either EECS251LA or EECS251LB lab)</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="EECS 251B">EECS 251B</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 250">COMPSCI 250</span>, or <span class="code_bubble" data-code-bubble="EL ENG 241B">EL ENG 241B</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 4 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Four hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Nikolić, Shao, Wawrzynek, Asanović, Stojanović, Seshia</p></div>
<p><a href="" class="btn-readless"><span>Advanced Digital Integrated Circuits and Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs251la" data-toggle="#cb_eecs251la">
<h3 class="courseblocktitle">
<span class="code">EECS 251LA</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits Lab</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs251la">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to</span><span class="deschide"> simulation and layout specification.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read More [+]</a></p>
<div id="936" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> Software testing of digital designs is covered leading to a set of exercises that cover the design flow. Digital synthesis, floor-planning, placement and routing are covered, as well as tools to evaluate timing and power consumption. Chip-level assembly is covered, including instantiation of custom blocks: I/O pads, memories, PLLs, etc.</p><p><strong>Student Learning Outcomes:</strong> Although the syllabus is the same as EECS151LA, the assignments and exams for EECS251LA will have harder problems in labs and in the project that test deeper understanding expected from a graduate level course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; and <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> is recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eecs251lb" data-toggle="#cb_eecs251lb">
<h3 class="courseblocktitle">
<span class="code">EECS 251LB</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits Lab</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eecs251lb">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms. A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow. Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail. The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor</span><span class="deschide"> system, with caches, graphics acceleration, and external peripheral components. The design is mapped and demonstrated on an FPGA hardware platform.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read More [+]</a></p>
<div id="349" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Although the syllabus is the same as EECS151LB, the assignments and exams for EECS251LB will have harder problems in labs and in the project that test deeper understanding expected from a graduate level course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; and <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> is recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read Less [-] </a></p></div>
</div>
</div></div>
<h4><a id="computer-science" name="computer-science"/>Computer Science</h4>
<div id="sc_sccoursedescs">
<div class="coursedescs_toggleAll notinpdf"><button class="btn_expandAll">Expand all course descriptions [+]</button><button class="btn_collapseAll">Collapse all course descriptions [-]</button></div>
<div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscic8" data-toggle="#cb_compscic8">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C8</span> 
<span class="title">Foundations of Data Science</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscic8">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023, Fall 2022, Spring 2022, Fall 2021, Summer 2021 8 Week Session, Fall 2020<br/>
Foundations of data science from three perspectives: inferential thinking, computational thinking, and real-world relevance. Given data arising from some real-world phenomenon, how does one analyze that data so as to understand that phenomenon? The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction</span><span class="deschide"> with hands-on analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. It delves into social and legal issues surrounding data analysis, including issues of privacy and data ownership.</span><br/>
 <a href="" class="btn-readmore"><span>Foundations of Data Science:</span> Read More [+]</a></p>
<div id="410" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> This course may be taken on its own, but students are encouraged to take it concurrently with a data science connector course (numbered 88 in a range of departments)</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="DATA C8">DATA C8</span>\<span class="code_bubble" data-code-bubble="COMPSCI C8">COMPSCI C8</span>\<span class="code_bubble" data-code-bubble="INFO C8">INFO C8</span>\<span class="code_bubble" data-code-bubble="STAT C8">STAT C8</span> after completing COMPSCI 8, or DATA 8. A deficient grade in <span class="code_bubble" data-code-bubble="DATA C8">DATA C8</span>\<span class="code_bubble" data-code-bubble="COMPSCI C8">COMPSCI C8</span>\<span class="code_bubble" data-code-bubble="INFO C8">INFO C8</span>\<span class="code_bubble" data-code-bubble="STAT C8">STAT C8</span> may be removed by taking COMPSCI 8, COMPSCI 8, or DATA 8.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 2 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 4 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and two hours of laboratory per week. Six hours of lecture and four hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Formerly known as:</strong> Computer Science C8/Statistics C8/Information C8</p><p><strong>Also listed as:</strong> DATA C8/INFO C8/STAT C8</p></div>
<p><a href="" class="btn-readless"><span>Foundations of Data Science:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9a" data-toggle="#cb_compsci9a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9A</span> 
<span class="title">Matlab for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9a">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Introduction to the constructs in the Matlab programming language, aimed at students who already know how to program. Array and matrix operations, functions and function handles, control flow, plotting and image manipulation, cell arrays and structures, and the Symbolic Mathematics toolbox.</span><br/>
 <a href="" class="btn-readmore"><span>Matlab for Programmers:</span> Read More [+]</a></p>
<div id="437" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience equivalent to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 10">COMPSCI 10</span>; familiarity with applications of matrix processing</p><p><strong>Repeat rules:</strong> Course may be repeated for credit up to a total of 4 units.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Matlab for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9c" data-toggle="#cb_compsci9c">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9C</span> 
<span class="title">C for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9c">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2019, Fall 2018, Spring 2018<br/>
Self-paced course in the C programming language for students who already know how to program. Computation, input and output, flow of control, functions, arrays, and pointers, linked structures, use of dynamic storage, and implementation of abstract data types.</span><br/>
 <a href="" class="btn-readmore"><span>C for Programmers:</span> Read More [+]</a></p>
<div id="922" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience with pointers (or addresses in assembly language) and linked data structures equivalent to that gained in COMPSCI 9B, <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 9C">COMPSCI 9C</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>C for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9d" data-toggle="#cb_compsci9d">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9D</span> 
<span class="title">Scheme and Functional Programming for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9d">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Self-paced course in functional programming, using the Scheme programming language, for students who already know how to program. Recursion; higher-order functions; list processing; implementation of rule-based querying.</span><br/>
 <a href="" class="btn-readmore"><span>Scheme and Functional Programming for Programmers:</span> Read More [+]</a></p>
<div id="662" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience similar to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 10">COMPSCI 10</span> or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 9D">COMPSCI 9D</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Scheme and Functional Programming for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9e" data-toggle="#cb_compsci9e">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9E</span> 
<span class="title">Productive Use of the UNIX Environment</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9e">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2019, Fall 2018, Spring 2018<br/>
Use of UNIX utilities and scripting facilities for customizing the programming environment, organizing files (possibly in more than one computer account), implementing a personal database, reformatting text, and searching for online resources.</span><br/>
 <a href="" class="btn-readmore"><span>Productive Use of the UNIX Environment:</span> Read More [+]</a></p>
<div id="712" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience similar to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span>; DOS or UNIX experience</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Productive Use of the UNIX Environment:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9f" data-toggle="#cb_compsci9f">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9F</span> 
<span class="title">C++ for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9f">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2019, Fall 2018, Spring 2018<br/>
Self-paced introduction to the constructs provided in the C++ programming language for procedural and object-oriented programming, aimed at students who already know how to program.</span><br/>
 <a href="" class="btn-readmore"><span>C++ for Programmers:</span> Read More [+]</a></p>
<div id="816" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience equivalent to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 9F">COMPSCI 9F</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>C++ for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9g" data-toggle="#cb_compsci9g">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9G</span> 
<span class="title">JAVA for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9g">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2019, Fall 2018, Spring 2018<br/>
Self-paced course in Java for students who already know how to program. Applets; variables and computation; events and flow of control; classes and objects; inheritance; GUI elements; applications; arrays, strings, files, and linked structures; exceptions; threads.</span><br/>
 <a href="" class="btn-readmore"><span>JAVA for Programmers:</span> Read More [+]</a></p>
<div id="443" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 9C">COMPSCI 9C</span>, <span class="code_bubble" data-code-bubble="COMPSCI 9F">COMPSCI 9F</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> plus experience with object-oriented programming or C-based language</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>JAVA for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci9h" data-toggle="#cb_compsci9h">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9H</span> 
<span class="title">Python for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci9h">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2019, Fall 2018, Spring 2018<br/>
Introduction to the constructs provided in the Python programming language, aimed at students who already know how to program. Flow of control; strings, tuples, lists, and dictionaries; CGI programming; file input and output; object-oriented programming; GUI elements.</span><br/>
 <a href="" class="btn-readmore"><span>Python for Programmers:</span> Read More [+]</a></p>
<div id="357" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience equivalent to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 10">COMPSCI 10</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Self-paced.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Python for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci10" data-toggle="#cb_compsci10">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 10</span> 
<span class="title">The Beauty and Joy of Computing</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci10">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
An introductory course for students with minimal prior exposure to computer science. Prepares students for future computer science courses and empowers them to utilize programming to solve problems in their field of study. Presents an overview of the history, great principles, and transformative applications of computer science, as well as a comprehensive introduction to programming. Topics include abstraction, recursion, algorithmic</span><span class="deschide"> complexity, higher-order functions, concurrency, social implications of computing (privacy, education, algorithmic bias), and engaging research areas (data science, AI, HCI). Students will program in Snap! (a friendly graphical language) and Python, and will design and implement two projects of their choice.</span><br/>
 <a href="" class="btn-readmore"><span>The Beauty and Joy of Computing:</span> Read More [+]</a></p>
<div id="785" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 10 after having taken W10, 61A, 61B, or 61C.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture, 1 hour of discussion, and 4 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of lecture, 2 hours of discussion, and 8 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of lecture and one hour of discussion and four hours of laboratory per week. Four hours of lecture and two hours of discussion and eight hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Hug</p></div>
<p><a href="" class="btn-readless"><span>The Beauty and Joy of Computing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsciw10" data-toggle="#cb_compsciw10">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W10</span> 
<span class="title">The Beauty and Joy of Computing</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsciw10">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2012<br/>
This course meets the programming prerequisite for 61A. An introduction to the beauty and joy of computing. The history, social implications, great principles, and future of computing. Beautiful applications that have changed the world. How computing empowers discovery and progress in other fields. Relevance of computing to the student and society will be emphasized. Students will learn the joy of programming a computer using a friendly, graphical language, and will</span><span class="deschide"> complete a substantial team programming project related to their interests.</span><br/>
 <a href="" class="btn-readmore"><span>The Beauty and Joy of Computing:</span> Read More [+]</a></p>
<div id="880" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for W10 after taking 10, 61A, 61B or 61C. A deficient grade in 10 may be removed by taking W10.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of web-based lecture and 5 hours of web-based discussion per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of web-based lecture and 10 hours of web-based discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of web-based lecture, four hours of web-based laboratory, and one hour of web-based discussion per week. Four hours of web-based lecture, eight hours of web-based laboratory, and two hours of web-based discussion per week for eight weeks.</p>--><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Hug</p></div>
<p><a href="" class="btn-readless"><span>The Beauty and Joy of Computing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci36" data-toggle="#cb_compsci36">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 36</span> 
<span class="title">CS Scholars Seminar: The Educational Climate in CS &amp; CS61A technical discussions</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci36">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2019, Fall 2018, Spring 2018<br/>
Computer Science 36 is a seminar for CS Scholars who are concurrently taking CS61A: The Structure and Interpretation of Computer Programs. CS Scholars is a cohort-model program to provide support in exploring and potentially declaring a CS major for students with little to no computational background prior to coming to the university. CS 36 provides an introduction to the CS curriculum at UC Berkeley, and the overall CS landscape in both industry</span><span class="deschide"> and academia—through the lens of accessibility and its relevance to diversity. Additionally, CS36 provides technical instruction to review concepts in CS61A, in order to support CS Scholars’ individual learning and success in the CS61A course.</span><br/>
 <a href="" class="btn-readmore"><span>CS Scholars Seminar: The Educational Climate in CS &amp; CS61A technical discussions:</span> Read More [+]</a></p>
<div id="248" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Students will know where to find several support services including tutoring, advising, counseling, and career advice.<br/>
Students will perform as well as possible in the CS61A prerequisite for the CS major. They will also have customized program plans for completing the major within four years.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Prerequisite satisfied Concurrently: Participating in the CS Scholars program, and concurrently taking <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of seminar per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Alternative to final exam. </p><p><strong>Instructor:</strong> Hunn</p></div>
<p><a href="" class="btn-readless"><span>CS Scholars Seminar: The Educational Climate in CS &amp; CS61A technical discussions:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39" data-toggle="#cb_compsci39">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2022, Spring 2019<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="189" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-3 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> Two to three hours of seminar per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final Exam To be decided by the instructor when the class is offered. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39j" data-toggle="#cb_compsci39j">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39J</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39j">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2010, Spring 2010, Fall 2009<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="920" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39k" data-toggle="#cb_compsci39k">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39K</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39k">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2013, Spring 2011, Spring 2010<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="214" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39m" data-toggle="#cb_compsci39m">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39M</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39m">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2008<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="378" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39n" data-toggle="#cb_compsci39n">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39N</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39n">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2010, Fall 2009<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="403" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39p" data-toggle="#cb_compsci39p">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39P</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39p">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2013, Spring 2013, Fall 2012<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="669" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39q" data-toggle="#cb_compsci39q">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39Q</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39q">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2011<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="890" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci39r" data-toggle="#cb_compsci39r">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39R</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci39r">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2016, Spring 2013<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="881" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of seminar per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci47a" data-toggle="#cb_compsci47a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 47A</span> 
<span class="title">Completion of Work in Computer Science 61A</span> 
<span class="hours">1 Unit</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci47a">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Implementation of generic operations. Streams and iterators. Implementation techniques for supporting functional, object-oriented, and constraint-based programming in the Scheme programming language. Together with 9D, 47A constitutes an abbreviated, self-paced version of 61A for students who have already taken a course equivalent to 61B.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of Work in Computer Science 61A:</span> Read More [+]</a></p>
<div id="242" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>, <span class="code_bubble" data-code-bubble="COMPSCI 9D">COMPSCI 9D</span>, and consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 47A after taking 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Zero hour of self-paced per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>Completion of Work in Computer Science 61A:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci47b" data-toggle="#cb_compsci47b">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 47B</span> 
<span class="title">Completion of Work in Computer Science 61B</span> 
<span class="hours">1 Unit</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci47b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Iterators. Hashing, applied to strings and multi-dimensional structures. Heaps. Storage management. Design and implementation of a program containing hundreds of lines of code. Students who have completed a portion of the subject matter of <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> may, with consent of instructor, complete <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> in this self-paced course. Please note that students in the College of Engineering are required to receive additional permission from the College</span><span class="deschide"> as well as the EECS department for the course to count in place of <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of Work in Computer Science 61B:</span> Read More [+]</a></p>
<div id="225" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> A course in data structures, <span class="code_bubble" data-code-bubble="COMPSCI 9G">COMPSCI 9G</span>, and consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 47B after taking 61B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Zero hour of self-paced per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>Completion of Work in Computer Science 61B:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci47c" data-toggle="#cb_compsci47c">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 47C</span> 
<span class="title">Completion of Work in Computer Science 61C</span> 
<span class="hours">1 Unit</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci47c">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
MIPS instruction set simulation. The assembly and linking process. Caches and virtual memory. Pipelined computer organization. Students with sufficient partial credit in 61C may, with consent of instructor, complete the credit in this self-paced course.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of Work in Computer Science 61C:</span> Read More [+]</a></p>
<div id="245" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Experience with assembly language including writing an interrupt handler, <span class="code_bubble" data-code-bubble="COMPSCI 9C">COMPSCI 9C</span>, and consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 47C">COMPSCI 47C</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 61CL">COMPSCI 61CL</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of self-paced per week</p><!--<p class=""><strong>Additional Format:</strong> Zero hour of self-paced per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>Completion of Work in Computer Science 61C:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci61a" data-toggle="#cb_compsci61a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61A</span> 
<span class="title">The Structure and Interpretation of Computer Programs</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci61a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students to programming</span><span class="deschide"> paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.</span><br/>
 <a href="" class="btn-readmore"><span>The Structure and Interpretation of Computer Programs:</span> Read More [+]</a></p>
<div id="538" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 1A">MATH 1A</span> (may be taken concurrently); programming experience equivalent to that gained from a score of 3 or above on the Advanced Placement Computer Science A exam</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 61A after completing Computer Science 47A or Computer Science 61AS. A deficient grade in Computer Science 61AS may be removed by taking Computer Science 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1.5 hours of discussion, and 1.5 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 3 hours of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one and one-half hours of laboratory and one and one-half hours of discussion per week. Six hours of lecture and three hours of laboratory and three hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>The Structure and Interpretation of Computer Programs:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci61b" data-toggle="#cb_compsci61b">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61B</span> 
<span class="title">Data Structures</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci61b">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Fundamental dynamic data structures, including linear lists, queues, trees, and other linked structures; arrays strings, and hash tables. Storage management. Elementary principles of software engineering. Abstract data types. Algorithms for sorting and searching. Introduction to the Java programming language.</span><br/>
 <a href="" class="btn-readmore"><span>Data Structures:</span> Read More [+]</a></p>
<div id="681" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, COMPSCI 88, or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 47B">COMPSCI 47B</span>. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> may be removed by taking <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 2 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 2 hours of discussion, and 4 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and two hours of laboratory per week. Six hours of lecture and two hours of discussion and four hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Hilfinger, Shewchuk</p></div>
<p><a href="" class="btn-readless"><span>Data Structures:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci61bl" data-toggle="#cb_compsci61bl">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61BL</span> 
<span class="title">Data Structures and Programming Methodology</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci61bl">

<p class="courseblockdesc"><span class="descshow">Terms offered: Summer 2023 8 Week Session, Summer 2022 8 Week Session, Summer 2021 8 Week Session<br/>
The same material as in 61B, but in a laboratory-based format.</span><br/>
 <a href="" class="btn-readmore"><span>Data Structures and Programming Methodology:</span> Read More [+]</a></p>
<div id="893" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, COMPSCI 88, or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 47B">COMPSCI 47B</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span> may be removed by taking <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of lecture and 6 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 2 hours of lecture and 12 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of lecture and six hours of laboratory per week. Two hours of lecture and twelve hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Data Structures and Programming Methodology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci61c" data-toggle="#cb_compsci61c">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61C</span> 
<span class="title">Great Ideas of Computer Architecture (Machine Structures)</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci61c">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
The internal organization and operation of digital computers. Machine architecture, support for high-level languages (logic, arithmetic, instruction sequencing) and operating systems (I/O, interrupts, memory management, process switching). Elements of computer logic design. Tradeoffs involved in fundamental architectural design decisions.</span><br/>
 <a href="" class="btn-readmore"><span>Great Ideas of Computer Architecture (Machine Structures):</span> Read More [+]</a></p>
<div id="362" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, along with either <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> or <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span>, or programming experience equivalent to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 9C">COMPSCI 9C</span>, <span class="code_bubble" data-code-bubble="COMPSCI 9F">COMPSCI 9F</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 9G">COMPSCI 9G</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61CL">COMPSCI 61CL</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 2 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 2 hours of discussion, and 4 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of lecture, one hour of discussion, and an average of six hours of self-scheduled programming laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Katz, Stojanovic</p></div>
<p><a href="" class="btn-readless"><span>Great Ideas of Computer Architecture (Machine Structures):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci61cl" data-toggle="#cb_compsci61cl">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61CL</span> 
<span class="title">Machine Structures (Lab-Centric)</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci61cl">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2009, Spring 2009, Fall 2008<br/>
The same material as in 61C but in a lab-centric format.</span><br/>
 <a href="" class="btn-readmore"><span>Machine Structures (Lab-Centric):</span> Read More [+]</a></p>
<div id="368" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, along with <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> or <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span>, or programming experience equivalent to that gained in <span class="code_bubble" data-code-bubble="COMPSCI 9C">COMPSCI 9C</span>, <span class="code_bubble" data-code-bubble="COMPSCI 9F">COMPSCI 9F</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 9G">COMPSCI 9G</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 61CL">COMPSCI 61CL</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 47C">COMPSCI 47C</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture, 1 hour of discussion, and 4 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of lecture, 2 hours of discussion, and 8 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of lecture, one hour of discussion, and an average of six hours of self-scheduled programming laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Patterson</p></div>
<p><a href="" class="btn-readless"><span>Machine Structures (Lab-Centric):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsciw61a" data-toggle="#cb_compsciw61a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W61A</span> 
<span class="title">The Structure and Interpretation of Computer Programs (Online)</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsciw61a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Summer 2019 8 Week Session<br/>
An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students to programming paradigms, including functional</span><span class="deschide">, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.</span><br/>
 <a href="" class="btn-readmore"><span>The Structure and Interpretation of Computer Programs (Online):</span> Read More [+]</a></p>
<div id="641" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 1A">MATH 1A</span> (may be taken concurrently); programming experience equivalent to that gained from a score of 3 or above on the Advanced Placement Computer Science A exam</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science W61A after completing Computer Science 47A or Computer Science 61A. A deficient grade in Computer Science W61A may be removed by taking Computer Science 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of web-based lecture, 1.5 hours of laboratory, and 1.5 hours of web-based discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of web-based lecture, 3 hours of laboratory, and 3 hours of web-based discussion per week</p><!--<p class=""><strong>Additional Format:</strong> One and one-half hours of laboratory and one and one-half hours of web-based discussion and three hours of web-based lecture per week. Three hours of laboratory and three hours of web-based discussion and six hours of web-based lecture per week for 8 weeks.</p>--><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Denero</p></div>
<p><a href="" class="btn-readless"><span>The Structure and Interpretation of Computer Programs (Online):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci70" data-toggle="#cb_compsci70">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 70</span> 
<span class="title">Discrete Mathematics and Probability Theory</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci70">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples include load balancing, existence arguments, Bayesian inference.</span><br/>
 <a href="" class="btn-readmore"><span>Discrete Mathematics and Probability Theory:</span> Read More [+]</a></p>
<div id="420" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Sophomore mathematical maturity, and programming experience equivalent to that gained with a score of 3 or above on the Advanced Placement Computer Science A exam</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 70 after taking Mathematics 55.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 2 hours of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 4 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and two hours of discussion per week. Six hours of lecture and four hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Rao, Vazirani, Wagner, Sahai</p></div>
<p><a href="" class="btn-readless"><span>Discrete Mathematics and Probability Theory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscic79" data-toggle="#cb_compscic79">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C79</span> 
<span class="title">Societal Risks and the Law</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscic79">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2013<br/>
Defining, perceiving, quantifying and measuring risk; identifying risks and estimating their importance; determining whether laws and regulations can protect us from these risks; examining how well existing laws work and how they could be improved; evaluting costs and benefits. Applications may vary by term. This course cannot be used to complete engineering unit or technical elective requirements for students in the College of Engineering.</span><br/>
 <a href="" class="btn-readmore"><span>Societal Risks and the Law:</span> Read More [+]</a></p>
<div id="910" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Also listed as:</strong> POL SCI C79/STAT C79</p></div>
<p><a href="" class="btn-readless"><span>Societal Risks and the Law:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci84" data-toggle="#cb_compsci84">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 84</span> 
<span class="title">Sophomore Seminar</span> 
<span class="hours">1 or 2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci84">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2007<br/>
Sophomore seminars are small interactive courses offered by faculty members in departments all across the campus. Sophomore seminars offer opportunity for close, regular intellectual contact between faculty members and students in the crucial second year. The topics vary from department to department and semester to semester. Enrollment limited to 15 sophomores.</span><br/>
 <a href="" class="btn-readmore"><span>Sophomore Seminar:</span> Read More [+]</a></p>
<div id="590" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> At discretion of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> <br/><span style="width: 15px; display: inline-block;"/>5 weeks - 3-6 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"/>10 weeks - 1.5-3 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"/>15 weeks - 1-2 hours of seminar per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 2.5-5 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> unit(s):one hour of seminar per week; 2 unit(s):two hours of seminar per week. unit(s):one and one-half hours of seminar per week; 2 unit(s):three hours of seminar per week for 10 weeks. unit(s):two hours of seminar per week; 2 unit(s):four hours of seminar per week for 8 weeks. unit(s):two and one-half hours of seminar per week; 2 unit(s):five hours of seminar per week for 6 weeks. unit(s):three hours of seminar per week; 2 unit(s):six hours of seminar per week for five weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscic88c" data-toggle="#cb_compscic88c">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C88C</span> 
<span class="title">Computational Structures in Data Science</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscic88c">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Development of Computer Science topics appearing in Foundations of Data Science (C8); expands computational concepts and techniques of abstraction. Understanding the structures that underlie the programs, algorithms, and languages used in data science and elsewhere. Mastery of a particular programming language while studying general techniques for managing program complexity, e.g., functional, object-oriented, and declarative programming. Provides</span><span class="deschide"> practical experience with composing larger systems through several significant programming projects.</span><br/>
 <a href="" class="btn-readmore"><span>Computational Structures in Data Science:</span> Read More [+]</a></p>
<div id="131" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> Develop a foundation of computer science concepts that arise in the context of data analytics, including algorithm, representation, interpretation, abstraction, sequencing, conditional, function, iteration, recursion, types, objects, and testing, and develop proficiency in the application of these concepts in the context of a modern programming language at a scale of whole programs on par with a traditional CS introduction course.</p><p><strong>Student Learning Outcomes:</strong> Students will be able to demonstrate a working knowledge of these concepts and a proficiency of programming based upon them sufficient to construct substantial stand-alone programs.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> This course is a Data Science connector course and may only be taken concurrently with or after <span class="code_bubble" data-code-bubble="COMPSCI C8">COMPSCI C8</span>/<span class="code_bubble" data-code-bubble="DATA C8">DATA C8</span>/<span class="code_bubble" data-code-bubble="INFO C8">INFO C8</span>/<span class="code_bubble" data-code-bubble="STAT C8">STAT C8</span>. Students may take more than one Data Science connector (88) course if they wish, concurrent with or after having taken the C8 course</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="DATA C88C">DATA C88C</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-2 hours of lecture, 2-2 hours of laboratory, and 0-1 hours of supplement per week</p><p><strong>Summer:</strong> 8 weeks - 4-4 hours of lecture, 4-4 hours of laboratory, and 0-2 hours of supplement per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of lecture and two hours of laboratory and zero to one hours of supplement per week. Four hours of lecture and four hours of laboratory and zero to two hours of supplement per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Ball, Culler</p><p><strong>Formerly known as:</strong> Computer Science 88</p><p><strong>Also listed as:</strong> DATA C88C</p></div>
<p><a href="" class="btn-readless"><span>Computational Structures in Data Science:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci94" data-toggle="#cb_compsci94">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 94</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci94">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2015<br/>
Topics will vary semester to semester. See the Computer Science Division announcements.</span><br/>
 <a href="" class="btn-readmore"><span>Special Topics:</span> Read More [+]</a></p>
<div id="265" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Special topics courses will include a lecture and depending on the specific offering may also include discussion and/or lab sections at the discretion of the instructor.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Special Topics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci97" data-toggle="#cb_compsci97">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 97</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci97">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2015, Spring 2015, Fall 2014<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="606" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 2-7.5 hours of fieldwork per week</p><!--<p class=""><strong>Additional Format:</strong> One to Four hour of Fieldwork per week for 15 weeks. Two to Seven and one-half hours of Fieldwork per week for 8 weeks. Two and one-half to Ten hours of Fieldwork per week for 6 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci98" data-toggle="#cb_compsci98">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 98</span> 
<span class="title">Directed Group Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci98">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2018, Fall 2016, Fall 2015<br/>
Seminars for group study of selected topics, which will vary from year to year. Intended for students in the lower division.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Study:</span> Read More [+]</a></p>
<div id="556" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of lecture per week per unit.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci99" data-toggle="#cb_compsci99">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 99</span> 
<span class="title">Individual Study and Research for Undergraduates</span> 
<span class="hours">1 - 2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci99">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2015, Fall 2014, Spring 2014<br/>
A course for lower division students in good standing who wish to undertake a program of individual inquiry initiated jointly by the student and a professor. There are no other formal prerequisites, but the supervising professor must be convinced that the student is able to profit by the program.</span><br/>
 <a href="" class="btn-readmore"><span>Individual Study and Research for Undergraduates:</span> Read More [+]</a></p>
<div id="81" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> GPA of 3.4 or better</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Zero hours of Independent study per week for 15 weeks. One to Four hour of Independent study per week for 8 weeks. One to Five hour of Independent study per week for 6 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Individual Study and Research for Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscic100" data-toggle="#cb_compscic100">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C100</span> 
<span class="title">Principles &amp; Techniques of Data Science</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscic100">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023, Fall 2022, Summer 2022 8 Week Session, Fall 2021, Fall 2020<br/>
In this course, students will explore the data science lifecycle, including question formulation, data collection and cleaning, exploratory data analysis and visualization, statistical inference and prediction​, and decision-making.​ This class will focus on quantitative critical thinking​ and key principles and techniques needed to carry out this cycle. These include</span><span class="deschide"> languages for transforming, querying and analyzing data; algorithms for machine learning methods including regression, classification and clustering; principles behind creating informative data visualizations; statistical concepts of measurement error and prediction; and techniques for scalable data processing.</span><br/>
 <a href="" class="btn-readmore"><span>Principles &amp; Techniques of Data Science:</span> Read More [+]</a></p>
<div id="474" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI C8">COMPSCI C8</span> / <span class="code_bubble" data-code-bubble="DATA C8">DATA C8</span> / <span class="code_bubble" data-code-bubble="INFO C8">INFO C8</span> / <span class="code_bubble" data-code-bubble="STAT C8">STAT C8</span> with a C- or better, or Pass; and <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, COMPSCI/DATA C88C, or <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span> with a C- or better, or Pass; Corequisite: <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>, <span class="code_bubble" data-code-bubble="MATH 56">56</span> or <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> (C- or better, or Pass, required if completed prior to Data C100)</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="DATA C100">DATA C100</span>\<span class="code_bubble" data-code-bubble="STAT C100">STAT C100</span>\<span class="code_bubble" data-code-bubble="COMPSCI C100">COMPSCI C100</span> after completing DATA 100. A deficient grade in <span class="code_bubble" data-code-bubble="DATA C100">DATA C100</span>\<span class="code_bubble" data-code-bubble="STAT C100">STAT C100</span>\<span class="code_bubble" data-code-bubble="COMPSCI C100">COMPSCI C100</span> may be removed by taking DATA 100.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 1 hour of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 2 hours of discussion, and 2 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and one hour of laboratory per week. Six hours of lecture and two hours of discussion and two hours of laboratory per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Formerly known as:</strong> Statistics C100/Computer Science C100</p><p><strong>Also listed as:</strong> DATA C100/STAT C100</p></div>
<p><a href="" class="btn-readless"><span>Principles &amp; Techniques of Data Science:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci146l" data-toggle="#cb_compsci146l">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 146L</span> 
<span class="title">Programmable Digital Systems Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci146l">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2015<br/>
Hardware description languages for digital system design and interactions with tool flows. Design, implementation, and verification of digital designs. Digital synthesis, partitioning, placement, routing, and simulation for Field-Programmable Gate Arrays. Large digital-system design concepts. Project design component – example, a full processor implementation with peripherals.</span><br/>
 <a href="" class="btn-readmore"><span>Programmable Digital Systems Laboratory:</span> Read More [+]</a></p>
<div id="847" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> This course is a one-time offering to supplement the EE141 course offered in the Fall 2014, with a lab and project section that cover the design of larger digital systems on a programmable chip platform (FPGA). The EE141 lectures in the Fall 2014 already covered the necessary lecture material, so students who took the EE141 lab in the Fall of 2014 will have a chance to expand their skills into the area of FPGA Digital System Design. Hence the pre-requisite for this course is that a student has taken the EE141 course in the Fall 2014.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> recommended</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 146L after taking Fall 2014 version of Computer Science 150.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of laboratory and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Stojanovic</p></div>
<p><a href="" class="btn-readless"><span>Programmable Digital Systems Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci152" data-toggle="#cb_compsci152">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 152</span> 
<span class="title">Computer Architecture and Engineering</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci152">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Instruction set architecture, microcoding, pipelining (simple and complex). Memory hierarchies and virtual memory. Processor parallelism: VLIW, vectors, multithreading. Multiprocessors.</span><br/>
 <a href="" class="btn-readmore"><span>Computer Architecture and Engineering:</span> Read More [+]</a></p>
<div id="868" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 2 hours of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 4 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and two hours of discussion per week. Six hours of lecture and four hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Asanovic, Culler, Kubiatowicz, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Computer Architecture and Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci160" data-toggle="#cb_compsci160">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 160</span> 
<span class="title">User Interface Design and Development</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci160">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Summer 2023 8 Week Session, Spring 2023, Summer 2022 8 Week Session<br/>
The design, implementation, and evaluation of user interfaces. User-centered design and task analysis. Conceptual models and interface metaphors. Usability inspection and evaluation methods. Analysis of user study data. Input methods (keyboard, pointing, touch, tangible) and input models. Visual design principles. Interface prototyping and implementation methodologies and tools. Students will develop a user interface</span><span class="deschide"> for a specific task and target user group in teams.</span><br/>
 <a href="" class="btn-readmore"><span>User Interface Design and Development:</span> Read More [+]</a></p>
<div id="100" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> or <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 160 after taking Computer Science 260A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Agrawala, Canny, Hartmann, Paulos</p></div>
<p><a href="" class="btn-readless"><span>User Interface Design and Development:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci161" data-toggle="#cb_compsci161">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 161</span> 
<span class="title">Computer Security</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci161">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
Introduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems.</span><br/>
 <a href="" class="btn-readmore"><span>Computer Security:</span> Read More [+]</a></p>
<div id="897" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> or <span class="code_bubble" data-code-bubble="MATH 55">MATH 55</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Paxson, Song, Wagner</p></div>
<p><a href="" class="btn-readless"><span>Computer Security:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci162" data-toggle="#cb_compsci162">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 162</span> 
<span class="title">Operating Systems and System Programming</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci162">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Basic concepts of operating systems and system programming. Utility programs, subsystems, multiple-program systems. Processes, interprocess communication, and synchronization. Memory allocation, segmentation, paging. Loading and linking, libraries. Resource allocation, scheduling, performance evaluation. File systems, storage devices, I/O systems. Protection, security, and privacy.</span><br/>
 <a href="" class="btn-readmore"><span>Operating Systems and System Programming:</span> Read More [+]</a></p>
<div id="989" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>, <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Joseph, Kubiatowicz, Stoica</p></div>
<p><a href="" class="btn-readless"><span>Operating Systems and System Programming:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci164" data-toggle="#cb_compsci164">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 164</span> 
<span class="title">Programming Languages and Compilers</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci164">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Survey of programming languages. The design of modern programming languages. Principles and techniques of scanning, parsing, semantic analysis, and code generation. Implementation of compilers, interpreters, and assemblers. Overview of run-time organization and error handling.</span><br/>
 <a href="" class="btn-readmore"><span>Programming Languages and Compilers:</span> Read More [+]</a></p>
<div id="547" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Bodik, Hilfinger, Necula</p></div>
<p><a href="" class="btn-readless"><span>Programming Languages and Compilers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci168" data-toggle="#cb_compsci168">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 168</span> 
<span class="title">Introduction to the Internet: Architecture and Protocols</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci168">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2022, Spring 2020, Fall 2018<br/>
This course is an introduction to the Internet architecture. We will focus on the concepts and fundamental design principles that have contributed to the Internet's scalability and robustness and survey the various protocols and algorithms used within this architecture. Topics include layering, addressing, intradomain routing, interdomain routing, reliable delivery, congestion control, and the core protocols (e.g., TCP, UDP, IP, DNS, and HTTP)</span><span class="deschide"> and network technologies (e.g., Ethernet, wireless).</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to the Internet: Architecture and Protocols:</span> Read More [+]</a></p>
<div id="51" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and <span class="code_bubble" data-code-bubble="COMPSCI 162">COMPSCI 162</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Katz, Paxson, Ratnasamy, Shenker, Stoica</p></div>
<p><a href="" class="btn-readless"><span>Introduction to the Internet: Architecture and Protocols:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci169" data-toggle="#cb_compsci169">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 169</span> 
<span class="title">Software Engineering</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci169">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2019, Spring 2019, Fall 2017<br/>
Ideas and techniques for designing, developing, and modifying large software systems. Function-oriented and object-oriented modular design techniques, designing for re-use and maintainability. Specification and documentation. Verification and validation. Cost and quality metrics and estimation. Project team organization and management. Students will work in teams on a substantial programming project.</span><br/>
 <a href="" class="btn-readmore"><span>Software Engineering:</span> Read More [+]</a></p>
<div id="968" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>; <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> or <span class="code_bubble" data-code-bubble="MATH 113">MATH 113</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Brewer, Fox, Necula, Sen</p></div>
<p><a href="" class="btn-readless"><span>Software Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci169a" data-toggle="#cb_compsci169a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 169A</span> 
<span class="title">Introduction to Software Engineering</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci169a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Fall 2022<br/>
Ideas and techniques for designing, developing, and modifying large software systems. Service-oriented architecture, behavior-driven design with user stories, cloud computing, test-driven development, automated testing, cost and quality metrics for maintainability and effort estimation, practical performance and security in software operations, design patterns and refactoring, specification and documentation, agile project team</span><span class="deschide"> organization and management.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Software Engineering:</span> Read More [+]</a></p>
<div id="346" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Students will learn how to approach and add functionality to a legacy code base;<br/>
Students will learn how to identify, measure, and resolve maintainability problems in code;<br/>
Students will learn how to work with nontechnical customers and convert customer requirements into a software plan that can be effort-estimated, built, and deployed to the public cloud, including the use of behavior-driven design, user stories, and velocity;<br/>
Students will learn how to write automated tests and measure test coverage;<br/>
Students will learn practical security and performance considerations for SaaS applications.<br/>
Students will learn the architecture and machinery of software as a service; the agile/XP methodology for software development and how it compares with other methodologies, including &quot;Plan-and-document&quot; methodologies;<br/>
Students will learn the role of software design patterns in refactoring, and how to identify opportunities to use them;</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> and <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>; <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> is recommended</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 169A">COMPSCI 169A</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 169">COMPSCI 169</span>, or <span class="code_bubble" data-code-bubble="COMPSCI W169A">COMPSCI W169A</span>. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI 169A">COMPSCI 169A</span> may be removed by taking <span class="code_bubble" data-code-bubble="COMPSCI 169">COMPSCI 169</span>, or <span class="code_bubble" data-code-bubble="COMPSCI W169A">COMPSCI W169A</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Fox, Fox, Ball</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Software Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci169l" data-toggle="#cb_compsci169l">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 169L</span> 
<span class="title">Software Engineering Team Project</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci169l">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Open-ended design project enhancing or creating software for real customers in an agile team setting. Teamwork coordination, effective customer meetings, pre- and post-iteration team meetings, running scrums and standups, technical communication. Contributing as a team to an open-source project; tools and workflows associated with open source collaboration, including fork-and-pull, rebase, upstream merge, continuous deployment &amp; inte</span><span class="deschide">gration.</span><br/>
 <a href="" class="btn-readmore"><span>Software Engineering Team Project:</span> Read More [+]</a></p>
<div id="645" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> Students will work in a team to develop new software or enhance existing software for a customer with a real business need.</p><p><strong>Student Learning Outcomes:</strong> Students will learn how to conduct effective meetings with nontechnical customers and work with their feedback;<br/>
Students will learn how to coordinate teamwork on developing, testing, and deploying features; and in most cases, how to approach a legacy codebase and add features to it.<br/>
Students will learn to run a small team including rotation of team roles such as product owner, scrum master, and so on;</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 169A">COMPSCI 169A</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 169L">COMPSCI 169L</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 169">COMPSCI 169</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of discussion per week. Two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Fox, Sen</p></div>
<p><a href="" class="btn-readless"><span>Software Engineering Team Project:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsciw169a" data-toggle="#cb_compsciw169a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W169A</span> 
<span class="title">Software Engineering</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsciw169a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Summer 2021 8 Week Session, Fall 2020, Summer 2020 8 Week Session<br/>
This course presents ideas and techniques for designing, developing, and modifying large software systems using Agile techniques and tools. Topics include: function-oriented and object-oriented modular design techniques, designing for re-use and maintainability including proper use of design patterns, behavior-driven design, test-driven development, user stories for requirements elicitation &amp; documentation</span><span class="deschide">, verification and validation, cost and quality metrics and estimation, project team organization and management, analyzing and refactoring legacy code.</span><br/>
 <a href="" class="btn-readmore"><span>Software Engineering:</span> Read More [+]</a></p>
<div id="109" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Students will learn how to apply BDD &amp; TDD to identify the main parts of a legacy code base, measure code quality, and refactor code to improve its quality;<br/>
Students will learn how to apply behavior-driven development (BDD) to elicit customer needs and express them as user stories that will drive development;<br/>
Students will learn how to apply the key ideas of learning a new framework to construct and deploy simple Rails applications;<br/>
Students will learn how to apply the key ideas of learning a new language in order to construct programs in Ruby;<br/>
Students will learn how to construct unit- and module-level tests and measure their coverage;<br/>
Students will learn how to exercise best practices in planning, effort estimation, and coordination of the efforts of small software teams, using appropriate tools to support those practices;<br/>
Students will learn how to identify and repair potential app-level security and performance problems.<br/>
Students will learn how to recognize when an appropriate Design Pattern may improve code quality, and refactor code to apply those Design Patterns;<br/>
Students will learn how to summarize the key architectural elements of RESTful SaaS applications and microservices;<br/>
Students will learn to articulate the primary differences between Agile and Plan-and-Document methodologies;</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> and <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI W169A">COMPSCI W169A</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 169">COMPSCI 169</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 169A">COMPSCI 169A</span>. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI W169A">COMPSCI W169A</span> may be removed by taking <span class="code_bubble" data-code-bubble="COMPSCI 169">COMPSCI 169</span>, or <span class="code_bubble" data-code-bubble="COMPSCI 169A">COMPSCI 169A</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of web-based lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of web-based lecture and 0 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of discussion and three hours of web-based lecture per week. Zero hour of discussion and six hours of web-based lecture per week for 8 weeks.</p>--><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Fox, Sen</p></div>
<p><a href="" class="btn-readless"><span>Software Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci170" data-toggle="#cb_compsci170">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 170</span> 
<span class="title">Efficient Algorithms and Intractable Problems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci170">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Concept and basic techniques in the design and analysis of algorithms; models of computation; lower bounds; algorithms for optimum search trees, balanced trees and UNION-FIND algorithms; numerical and algebraic algorithms; combinatorial algorithms. Turing machines, how to count steps, deterministic and nondeterministic Turing machines, NP-completeness. Unsolvable and intractable problems.</span><br/>
 <a href="" class="btn-readmore"><span>Efficient Algorithms and Intractable Problems:</span> Read More [+]</a></p>
<div id="87" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Demmel, Papadimitriou, Rao, Wagner, Vazirani</p></div>
<p><a href="" class="btn-readless"><span>Efficient Algorithms and Intractable Problems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci171" data-toggle="#cb_compsci171">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 171</span> 
<span class="title">Cryptography</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci171">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Summer 2023 8 Week Session, Spring 2021<br/>
Cryptography or cryptology is the science of designing algorithms and protocols for enabling parties to communicate and compute securely in an untrusted environment (e.g. secure communication, digital signature, etc.) Over the last four decades, cryptography has transformed from an ad hoc collection of mysterious tricks into a rigorous science based on firm complexity-theoretic foundations. This modern complexity-theoretic approach to cryptography</span><span class="deschide"> will be the focus. E.g., in the context of encryption we will begin by giving a precise mathematical definition for what it means to be a secure encryption scheme and then give a construction (realizing this security notion) assuming various computational hardness assumptions (e.g. factoring).</span><br/>
 <a href="" class="btn-readmore"><span>Cryptography:</span> Read More [+]</a></p>
<div id="236" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garg</p></div>
<p><a href="" class="btn-readless"><span>Cryptography:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci172" data-toggle="#cb_compsci172">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 172</span> 
<span class="title">Computability and Complexity</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci172">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Fall 2022, Spring 2022<br/>
Finite automata, Turing machines and RAMs. Undecidable, exponential, and polynomial-time problems. Polynomial-time equivalence of all reasonable models of computation. Nondeterministic Turing machines. Theory of NP-completeness: Cook's theorem, NP-completeness of basic problems. Selected topics in language theory, complexity and randomness.</span><br/>
 <a href="" class="btn-readmore"><span>Computability and Complexity:</span> Read More [+]</a></p>
<div id="115" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 170">COMPSCI 170</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Papadimitriou, Seshia, Sinclair, Vazirani</p></div>
<p><a href="" class="btn-readless"><span>Computability and Complexity:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci174" data-toggle="#cb_compsci174">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 174</span> 
<span class="title">Combinatorics and Discrete Probability</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci174">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Fall 2019<br/>
Permutations, combinations, principle of inclusion and exclusion, generating functions, Ramsey theory. Expectation and variance, Chebychev's inequality, Chernov bounds. Birthday paradox, coupon collector's problem, Markov chains and entropy computations, universal hashing, random number generation, random graphs and probabilistic existence bounds.</span><br/>
 <a href="" class="btn-readmore"><span>Combinatorics and Discrete Probability:</span> Read More [+]</a></p>
<div id="940" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 170">COMPSCI 170</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Bartlett, Papadimitriou, Sinclair, Vazirani</p></div>
<p><a href="" class="btn-readless"><span>Combinatorics and Discrete Probability:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci176" data-toggle="#cb_compsci176">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 176</span> 
<span class="title">Algorithms for Computational Biology</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci176">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2020, Fall 2018, Fall 2017<br/>
Algorithms and probabilistic models that arise in various computational biology applications: suffix trees, suffix arrays, pattern matching, repeat finding, sequence alignment, phylogenetics, genome rearrangements, hidden Markov models, gene finding, motif finding, stochastic context free grammars, RNA secondary structure. There are no biology prerequisites for this course, but a strong quantitative background will be essential.</span><br/>
 <a href="" class="btn-readmore"><span>Algorithms for Computational Biology:</span> Read More [+]</a></p>
<div id="946" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> and <span class="code_bubble" data-code-bubble="COMPSCI 170">COMPSCI 170</span>; experience programming in a language such as C, C++, Java, or Python</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Song</p></div>
<p><a href="" class="btn-readless"><span>Algorithms for Computational Biology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscic176" data-toggle="#cb_compscic176">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C176</span> 
<span class="title">Algorithms for Computational Biology</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscic176">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2022<br/>
This course will provide familiarity with algorithms and probabilistic models that arise in various computational biology applications, such as suffix trees, suffix arrays, pattern matching, repeat finding, sequence alignment, phylogenetics, hidden Markov models, gene finding, motif finding, linear/logistic regression, random forests, convolutional neural networks, genome-wide association studies, pathogenicity prediction, and sequence-to-epigenome prediction.</span><br/>
 <a href="" class="btn-readmore"><span>Algorithms for Computational Biology:</span> Read More [+]</a></p>
<div id="281" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Understand the basic elements of molecular, cell, and evolutionary biology.<br/>
Understand the key probabilistic and machine learning models used in computational biology applications.<br/>
Understand various data structures and algorithms that arise in computational biology.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> and <span class="code_bubble" data-code-bubble="COMPSCI 170">COMPSCI 170</span>, <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span> or <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> or an equivalent linear algebra course</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI C176">COMPSCI C176</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 176">COMPSCI 176</span>. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI C176">COMPSCI C176</span> may be removed by taking <span class="code_bubble" data-code-bubble="COMPSCI 176">COMPSCI 176</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Song, Yun, Ioannidis</p><p><strong>Also listed as:</strong> CMPBIO C176</p></div>
<p><a href="" class="btn-readless"><span>Algorithms for Computational Biology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci182" data-toggle="#cb_compsci182">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 182</span> 
<span class="title">Designing, Visualizing and Understanding Deep Neural Networks</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci182">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Deep Networks have revolutionized computer vision, language technology, robotics and control. They have growing impact in many other areas of science and engineering. They do not however, follow a closed or compact set of theoretical principles. In Yann Lecun's words they require &quot;an interplay between intuitive insights, theoretical modeling,<br/>
practical implementations, empirical studies, and scientific analyses.&quot; This course attempts</span><span class="deschide"> to cover that ground.</span><br/>
 <a href="" class="btn-readmore"><span>Designing, Visualizing and Understanding Deep Neural Networks:</span> Read More [+]</a></p>
<div id="157" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Students will come to understand visualizing deep networks. Exploring the training and use of deep networks with visualization tools.<br/>
Students will learn design principles and best practices: design motifs that work well in particular domains, structure optimization and parameter optimization.<br/>
Understanding deep networks. Methods with formal guarantees: generative and adversarial models, tensor factorization.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 53">MATH 53</span>, <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>; <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> or <span class="code_bubble" data-code-bubble="STAT 134">STAT 134</span>; <span class="code_bubble" data-code-bubble="COMPSCI 189">COMPSCI 189</span> is recommended</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI 182">COMPSCI 182</span> after completing COMPSCI W182, or COMPSCI L182. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI 182">COMPSCI 182</span> may be removed by taking COMPSCI W182, or COMPSCI L182.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructor:</strong> Canny</p></div>
<p><a href="" class="btn-readless"><span>Designing, Visualizing and Understanding Deep Neural Networks:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci184" data-toggle="#cb_compsci184">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 184</span> 
<span class="title">Foundations of Computer Graphics</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci184">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Techniques of modeling objects for the purpose of computer rendering: boundary representations, constructive solids geometry, hierarchical scene descriptions. Mathematical techniques for curve and surface representation. Basic elements of a computer graphics rendering pipeline; architecture of modern graphics display devices. Geometrical transformations such as rotation, scaling, translation, and their matrix representations. Homogeneous</span><span class="deschide"> coordinates, projective and perspective transformations. Algorithms for clipping, hidden surface removal, rasterization, and anti-aliasing. Scan-line based and ray-based rendering algorithms. Lighting models for reflection, refraction, transparency.</span><br/>
 <a href="" class="btn-readmore"><span>Foundations of Computer Graphics:</span> Read More [+]</a></p>
<div id="720" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> or <span class="code_bubble" data-code-bubble="COMPSCI 61BL">COMPSCI 61BL</span>; programming skills in C, C++, or Java; linear algebra and calculus</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 184 after taking Comp Sci 284A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> O'Brien, Ng</p></div>
<p><a href="" class="btn-readless"><span>Foundations of Computer Graphics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci186" data-toggle="#cb_compsci186">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 186</span> 
<span class="title">Introduction to Database Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci186">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Access methods and file systems to facilitate data access. Hierarchical, network, relational, and object-oriented data models. Query languages for models. Embedding query languages in programming languages. Database services including protection, integrity control, and alternative views of data. High-level interfaces including application generators, browsers, and report writers. Introduction to transaction processing. Database system implementation</span><span class="deschide"> to be done as term project.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Database Systems:</span> Read More [+]</a></p>
<div id="818" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 186 after taking Comp Sci 286A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Franklin, Hellerstein</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Database Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsciw186" data-toggle="#cb_compsciw186">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W186</span> 
<span class="title">Introduction to Database Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsciw186">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2021, Spring 2021, Spring 2020<br/>
Broad introduction to systems for storing, querying, updating and managing large databases. Computer science skills synthesizing viewpoints from low-level systems architecture to high-level modeling and declarative logic. System internals, including the complex details of query optimization and execution, concurrency control, indexing, and memory management. More abstract issues in query languages and data modeling – students are exposed to</span><span class="deschide"> formal relational languages, SQL, full-text search, entity-relationship modeling, normalization, and physical database design. Recent technological trends in the field, including “Big Data” programming libraries like MapReduce, and distributed key-value stores with various consistency models.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Database Systems:</span> Read More [+]</a></p>
<div id="750" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span> and <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="COMPSCI W186">COMPSCI W186</span> after completing <span class="code_bubble" data-code-bubble="COMPSCI 186">COMPSCI 186</span>. A deficient grade in <span class="code_bubble" data-code-bubble="COMPSCI W186">COMPSCI W186</span> may be removed by taking <span class="code_bubble" data-code-bubble="COMPSCI 186">COMPSCI 186</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of web-based lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of web-based lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of discussion and three hours of web-based lecture per week. Two hours of discussion and six hours of web-based lecture per week for 8 weeks.</p>--><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Hellerstein</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Database Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci188" data-toggle="#cb_compsci188">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 188</span> 
<span class="title">Introduction to Artificial Intelligence</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci188">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Summer 2023 8 Week Session, Spring 2023<br/>
Ideas and techniques underlying the design of intelligent computer systems. Topics include search, game playing, knowledge representation, inference, planning, reasoning under uncertainty, machine learning, robotics, perception, and language understanding.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Artificial Intelligence:</span> Read More [+]</a></p>
<div id="439" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Abbeel, Klein, Russell</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Artificial Intelligence:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci189" data-toggle="#cb_compsci189">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 189</span> 
<span class="title">Introduction to Machine Learning</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci189">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Theoretical foundations, algorithms, methodologies, and applications for machine learning. Topics may include supervised methods for regression and classication (linear models, trees, neural networks, ensemble methods, instance-based methods); generative and discriminative probabilistic models; Bayesian parametric learning; density estimation and clustering; Bayesian networks; time series models; dimensionality reduction; programming projects</span><span class="deschide"> covering a variety of real-world applications.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Machine Learning:</span> Read More [+]</a></p>
<div id="997" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 53">MATH 53</span> and <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>; and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 189 after taking Comp Sci 289A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week. Six hours of lecture and two hours of discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Abbeel, Bartlett, Darrell, El Ghaoui, Jordan, Klein, Malik, Russell</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Machine Learning:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscic191" data-toggle="#cb_compscic191">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C191</span> 
<span class="title">Introduction to Quantum Computing</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscic191">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2021<br/>
This multidisciplinary course provides an introduction to fundamental conceptual aspects of quantum mechanics from a computational and informational theoretic perspective, as well as physical implementations and technological applications of quantum information science. Basic sections of quantum algorithms, complexity, and cryptography, will be touched upon, as well as pertinent physical realizations from nanoscale science and engineering.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Quantum Computing:</span> Read More [+]</a></p>
<div id="879" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Linear Algebra (<span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> or <span class="code_bubble" data-code-bubble="PHYSICS 89">PHYSICS 89</span> or <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>) AND either discrete mathematics (<span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span> or <span class="code_bubble" data-code-bubble="MATH 55">MATH 55</span>), or quantum mechanics (<span class="code_bubble" data-code-bubble="PHYSICS 7C">PHYSICS 7C</span> or <span class="code_bubble" data-code-bubble="PHYSICS 137A">PHYSICS 137A</span> or <span class="code_bubble" data-code-bubble="CHEM 120A">CHEM 120A</span>)</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Also listed as:</strong> CHEM C191/PHYSICS C191</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Quantum Computing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci194" data-toggle="#cb_compsci194">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 194</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci194">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Topics will vary semester to semester. See the Computer Science Division announcements.</span><br/>
 <a href="" class="btn-readmore"><span>Special Topics:</span> Read More [+]</a></p>
<div id="947" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p><p><strong>Summer:</strong> 8 weeks - 2-8 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> One to four hours of lecture per week. Two to eight hours of lecture per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Special Topics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci195" data-toggle="#cb_compsci195">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 195</span> 
<span class="title">Social Implications of Computer Technology</span> 
<span class="hours">1 Unit</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci195">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Topics include electronic community; the changing nature of work; technological risks; the information economy; intellectual property; privacy; artificial intelligence and the sense of self; pornography and censorship; professional ethics. Students will lead discussions on additional topics.</span><br/>
 <a href="" class="btn-readmore"><span>Social Implications of Computer Technology:</span> Read More [+]</a></p>
<div id="828" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 195 after taking C195/Interdisciplinary Field Study C155 or H195.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1.5 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture/discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Harvey</p></div>
<p><a href="" class="btn-readless"><span>Social Implications of Computer Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscih195" data-toggle="#cb_compscih195">
<h3 class="courseblocktitle">
<span class="code">COMPSCI H195</span> 
<span class="title">Honors Social Implications of Computer Technology</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscih195">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Fall 2021<br/>
Topics include electronic community; the changing nature of work; technological risks; the information economy; intellectual property; privacy; artificial intelligence and the sense of self; pornography and censorship; professional ethics. Students may lead discussions on additional topics.</span><br/>
 <a href="" class="btn-readmore"><span>Honors Social Implications of Computer Technology:</span> Read More [+]</a></p>
<div id="803" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Student will receive no credit for H195 after taking 195 or C195.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1.5 hours of lecture and 1.5 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> One and one-half hours of Lecture and One and one-half hours of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Harvey</p></div>
<p><a href="" class="btn-readless"><span>Honors Social Implications of Computer Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscih196a" data-toggle="#cb_compscih196a">
<h3 class="courseblocktitle">
<span class="code">COMPSCI H196A</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscih196a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2021, Fall 2020, Fall 2016<br/>
Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not be used to satisfy the requirement for 27 upper division</span><span class="deschide"> technical units in the College of Letters and Science with a major in Computer Science.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="171" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the computer science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Individual research.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compscih196b" data-toggle="#cb_compscih196b">
<h3 class="courseblocktitle">
<span class="code">COMPSCI H196B</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compscih196b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2010, Spring 2009<br/>
Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not be used to satisfy the requirement for 27 upper division</span><span class="deschide"> technical units in the College of Letters and Science with a major in Computer Science.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="502" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the computer science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Individual research.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci197" data-toggle="#cb_compsci197">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 197</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci197">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2019, Fall 2018, Fall 2016<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="270" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 2-7.5 hours of fieldwork per week</p><!--<p class=""><strong>Additional Format:</strong> One to Four hour of Fieldwork per week for 15 weeks. Two to Seven and one-half hours of Fieldwork per week for 8 weeks. Two and one-half to Ten hours of Fieldwork per week for 6 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci198" data-toggle="#cb_compsci198">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 198</span> 
<span class="title">Directed Group Studies for Advanced Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci198">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Spring 2022<br/>
Group study of selected topics in Computer Sciences, usually relating to new developments.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Studies for Advanced Undergraduates:</span> Read More [+]</a></p>
<div id="20" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 2.0 GPA or better; 60 units completed</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p><!--<p class=""><strong>Additional Format:</strong> Course format varies with section.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Studies for Advanced Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_compsci199" data-toggle="#cb_compsci199">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 199</span> 
<span class="title">Supervised Independent Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_compsci199">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2021, Spring 2020, Fall 2018<br/>
Supervised independent study. Enrollment restrictions apply.</span><br/>
 <a href="" class="btn-readmore"><span>Supervised Independent Study:</span> Read More [+]</a></p>
<div id="661" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor and major adviser</p><p><strong>Credit Restrictions:</strong> Enrollment is restricted; see the Introduction to Courses and Curricula section of this catalog.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Individual conferences.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Supervised Independent Study:</span> Read Less [-] </a></p></div>
</div>
</div></div>
<h4><a id="electrical-engineering-computer-sciences" name="electrical-engineering-computer-sciences"/>Electrical Engineering</h4>
<div id="sc_sccoursedescs">
<div class="coursedescs_toggleAll notinpdf"><button class="btn_expandAll">Expand all course descriptions [+]</button><button class="btn_collapseAll">Collapse all course descriptions [-]</button></div>
<div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng24" data-toggle="#cb_eleng24">
<h3 class="courseblocktitle">
<span class="code">EL ENG 24</span> 
<span class="title">Freshman Seminar</span> 
<span class="hours">1 Unit</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng24">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2022, Fall 2021, Fall 2017<br/>
The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman seminars are offered in all campus departments, and topics may vary from department to department and semester to semester.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman Seminar:</span> Read More [+]</a></p>
<div id="976" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of Seminar per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng25" data-toggle="#cb_eleng25">
<h3 class="courseblocktitle">
<span class="code">EL ENG 25</span> 
<span class="title">What Electrical Engineers Do--Feedback from Recent Graduates</span> 
<span class="hours">1 Unit</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng25">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2011<br/>
A Berkeley Electrical Engineering and Computer Sciences degree opens the door to many opportunities, but what exactly are they? Graduation is only a few years away and it's not too early to find out. In this seminar students will hear from practicing engineers who recently graduated. What are they working on? Are they working in a team? What do they wish they had learned better? How did they find their jobs?</span><br/>
 <a href="" class="btn-readmore"><span>What Electrical Engineers Do--Feedback from Recent Graduates:</span> Read More [+]</a></p>
<div id="470" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of Lecture per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Boser</p></div>
<p><a href="" class="btn-readless"><span>What Electrical Engineers Do--Feedback from Recent Graduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng39" data-toggle="#cb_eleng39">
<h3 class="courseblocktitle">
<span class="code">EL ENG 39</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">2 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng39">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Fall 2022, Spring 2022<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="696" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> Two to four hours of seminar per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng42" data-toggle="#cb_eleng42">
<h3 class="courseblocktitle">
<span class="code">EL ENG 42</span> 
<span class="title">Introduction to Digital Electronics</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng42">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2013, Summer 2013 8 Week Session, Spring 2013<br/>
This course serves as an introduction to the principles of electrical engineering, starting from the basic concepts of voltage and current and circuit elements of resistors, capacitors, and inductors. Circuit analysis is taught using Kirchhoff's voltage and current laws with Thevenin and Norton equivalents. Operational amplifiers with feedback are introduced as basic building blocks for amplication and filtering. Semiconductor</span><span class="deschide"> devices including diodes and MOSFETS and their IV characteristics are covered. Applications of diodes for rectification, and design of MOSFETs in common source amplifiers are taught. Digital logic gates and design using CMOS as well as simple flip-flops are introduced. Speed and scaling issues for CMOS are considered. The course includes as motivating examples designs of high level applications including logic circuits, amplifiers, power supplies, and communication links.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Electronics:</span> Read More [+]</a></p>
<div id="195" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 1B</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 42 after taking 40 or 100.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks. Six hours of Lecture and Two hours of Discussion per week for 8 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Electronics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng49" data-toggle="#cb_eleng49">
<h3 class="courseblocktitle">
<span class="code">EL ENG 49</span> 
<span class="title">Electronics for the Internet of Things</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng49">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2020, Spring 2019, Fall 2018<br/>
Electronics has become pervasive in our lives as a powerful technology with applications in a wide range of fields including healthcare, environmental monitoring, robotics, or entertainment. This course teaches how to build electronic circuits that interact with the environment through sensors and actuators and how to communicate wirelessly with the internet to cooperate with other devices and with humans. In the laboratory students design</span><span class="deschide"> and build representative samples such as solar harvesters, robots, that exchange information with or are controlled from the cloud.</span><br/>
 <a href="" class="btn-readmore"><span>Electronics for the Internet of Things:</span> Read More [+]</a></p>
<div id="346" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> Electronics has become a powerful and ubiquitous technology supporting solutions to a wide range of applications in fields ranging from science, engineering, healthcare, environmental monitoring, transportation, to entertainment. The objective of this course is to teach students majoring in these and related subjects how to use electronic devices to solve problems in their areas of expertise.<br/>Through the lecture and laboratory, students gain insight into the possibilities and limitations of the technology and how to use electronics to help solve problems. Students learn to use electronics to interact with the environment through sound, light, temperature, motion using sensors and actuators, and how to use electronic computation to orchestrate the interactions and exchange information wirelessly over the internet.</p><p><strong>Student Learning Outcomes:</strong> Deploy electronic sensors and interface them to microcontrollers through digital and analog channels as well as common protocols (I2C, SPI),<br/>
Design, build and test electronic devices leveraging these concepts.<br/>
Interact with the internet and cloud services using protocols such as http, MQTT, Blynk,<br/>
Interface DC motors, steppers and servos to microcontrollers,<br/>
Represent information with voltage, current, power, and energy and how to measure these quantities with laboratory equipment,<br/>
To use and program low-cost and low-power microcontrollers for sensing, actuation, and information processing, and find and use program libraries supporting these tasks<br/>
Understand and make basic low-pass and high-pass filters, Wheatstone bridge etc.<br/>
Use electronics to sense and actuate physical parameters such as temperature, humidity, sound, light, and motion,</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="ENGIN 7">ENGIN 7</span>, <span class="code_bubble" data-code-bubble="COMPSCI 10">COMPSCI 10</span>, or equivalent background in computer programming (including <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span> or <span class="code_bubble" data-code-bubble="COMPSCI C8">COMPSCI C8</span> / <span class="code_bubble" data-code-bubble="INFO C8">INFO C8</span> / <span class="code_bubble" data-code-bubble="STAT C8">STAT C8</span>); <span class="code_bubble" data-code-bubble="MATH 1A">MATH 1A</span> or equivalent background in Calculus</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 2 hours of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and three hours of laboratory and two hours of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Boser</p></div>
<p><a href="" class="btn-readless"><span>Electronics for the Internet of Things:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng84" data-toggle="#cb_eleng84">
<h3 class="courseblocktitle">
<span class="code">EL ENG 84</span> 
<span class="title">Sophomore Seminar</span> 
<span class="hours">1 or 2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng84">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2022, Spring 2022, Fall 2021<br/>
Sophomore seminars are small interactive courses offered by faculty members in departments all across the campus. Sophomore seminars offer opportunity for close, regular intellectual contact between faculty members and students in the crucial second year. The topics vary from department to department and semester to semester. Enrollment limited to 15 sophomores.</span><br/>
 <a href="" class="btn-readmore"><span>Sophomore Seminar:</span> Read More [+]</a></p>
<div id="899" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> At discretion of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> <br/><span style="width: 15px; display: inline-block;"/>5 weeks - 3-6 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"/>10 weeks - 1.5-3 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"/>15 weeks - 1-2 hours of seminar per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 2.5-5 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 1.5-3.5 hours of seminar per week</p><!--<p class=""><strong>Additional Format:</strong> unit(s):one hour of seminar per week; 2 unit(s):two hours of seminar per week. unit(s):one and one-half hours of seminar per week; 2 unit(s):three hours of seminar per week for 10 weeks. unit(s):one and one-half hours of seminar per week; 2 unit(s):three and one-half hours of seminar per week for 8 weeks. unit(s):two and one-half hours of seminar per week; 2 unit(s):five hours of seminar per week for 6 weeks. unit(s):three hours of seminar per week; 2 unit(s):six hours of seminar per week for five weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng97" data-toggle="#cb_eleng97">
<h3 class="courseblocktitle">
<span class="code">EL ENG 97</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng97">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="941" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 2-7.5 hours of fieldwork per week</p><!--<p class=""><strong>Additional Format:</strong> One to Four hour of Fieldwork per week for 15 weeks. Two to Seven and one-half hours of Fieldwork per week for 8 weeks. Two and one-half to Ten hours of Fieldwork per week for 6 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng98" data-toggle="#cb_eleng98">
<h3 class="courseblocktitle">
<span class="code">EL ENG 98</span> 
<span class="title">Directed Group Study for Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng98">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2021, Fall 2020, Fall 2016<br/>
Group study of selected topics in electrical engineering, usually relating to new developments.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Study for Undergraduates:</span> Read More [+]</a></p>
<div id="813" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p><!--<p class=""><strong>Additional Format:</strong> Course format varies.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Study for Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng99" data-toggle="#cb_eleng99">
<h3 class="courseblocktitle">
<span class="code">EL ENG 99</span> 
<span class="title">Individual Study and Research for Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng99">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Supervised independent study and research for students with fewer than 60 units completed.</span><br/>
 <a href="" class="btn-readmore"><span>Individual Study and Research for Undergraduates:</span> Read More [+]</a></p>
<div id="813" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Freshman or sophomore standing and consent of instructor. Minimum GPA of 3.4 required</p><p><strong>Credit Restrictions:</strong> Enrollment is restricted; see the Introduction to Courses and Curricula section of this catalog.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> One to four hours of independent study per week. One to four hours of independent study per week for 8 weeks. One to five hours of independent study per week for 6 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Individual Study and Research for Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng105" data-toggle="#cb_eleng105">
<h3 class="courseblocktitle">
<span class="code">EL ENG 105</span> 
<span class="title">Microelectronic Devices and Circuits</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng105">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
This course covers the fundamental circuit and device concepts needed to understand analog integrated circuits. After an overview of the basic properties of semiconductors, the p-n junction and MOS capacitors are described and the MOSFET is modeled as a large-signal device. Two port small-signal amplifiers and their realization using single stage and multistage CMOS building blocks are discussed. Sinusoidal steady-state signals are introduced</span><span class="deschide"> and the techniques of phasor analysis are developed, including impedance and the magnitude and phase response of linear circuits. The frequency responses of single and multi-stage amplifiers are analyzed. Differential amplifiers are introduced.</span><br/>
 <a href="" class="btn-readmore"><span>Microelectronic Devices and Circuits:</span> Read More [+]</a></p>
<div id="416" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> after completing <span class="code_bubble" data-code-bubble="EL ENG 240A">EL ENG 240A</span>, or <span class="code_bubble" data-code-bubble="EL ENG 140">EL ENG 140</span>.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture, One hour of Discussion, and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Microelectronic Devices and Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc106a" data-toggle="#cb_elengc106a">
<h3 class="courseblocktitle">
<span class="code">EL ENG C106A</span> 
<span class="title">Introduction to Robotics</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc106a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2017, Fall 2016, Fall 2015<br/>
An introduction to the kinematics, dynamics, and control of robot manipulators, robotic vision, and sensing. The course covers forward and inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, and control. It presents elementary principles on proximity, tactile, and force sensing, vision sensors, camera calibration, stereo construction, and motion detection. The course concludes with current applications</span><span class="deschide"> of robotics in active perception, medical robotics, and other areas.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Robotics:</span> Read More [+]</a></p>
<div id="43" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span> or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture, One hour of Discussion, and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Bajcsy</p><p><strong>Formerly known as:</strong> Electrical Engineering C125/Bioengineering C125</p><p><strong>Also listed as:</strong> BIO ENG C125</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Robotics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc106b" data-toggle="#cb_elengc106b">
<h3 class="courseblocktitle">
<span class="code">EL ENG C106B</span> 
<span class="title">Robotic Manipulation and Interaction</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc106b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2017, Spring 2016<br/>
This course is a sequel to Electrical Engineering C106A/Bioengineering C125, which covers kinematics, dynamics and control of a single robot. This course will cover dynamics and control of groups of robotic manipulators coordinating with each other and interacting with the environment. Concepts will include an introduction to grasping and the constrained manipulation, contacts and force control for interaction with the environment. We will also cover</span><span class="deschide"> active perception guided manipulation, as well as the manipulation of non-rigid objects. Throughout, we will emphasize design and human-robot interactions, and applications to applications in manufacturing, service robotics, tele-surgery, and locomotion.</span><br/>
 <a href="" class="btn-readmore"><span>Robotic Manipulation and Interaction:</span> Read More [+]</a></p>
<div id="47" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS C106A">EECS C106A</span> / <span class="code_bubble" data-code-bubble="BIO ENG C125">BIO ENG C125</span> or consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and three hours of laboratory and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Bajcsy, Sastry</p><p><strong>Also listed as:</strong> BIO ENG C125B</p></div>
<p><a href="" class="btn-readless"><span>Robotic Manipulation and Interaction:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng113" data-toggle="#cb_eleng113">
<h3 class="courseblocktitle">
<span class="code">EL ENG 113</span> 
<span class="title">Power Electronics</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng113">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, reactors, and electromagnetic machinery. Characteristics of bipolar and MOS power semiconductor devices. Applications to motor control, switching power supplies, lighting, power systems, and other areas as appropriate.</span><br/>
 <a href="" class="btn-readmore"><span>Power Electronics:</span> Read More [+]</a></p>
<div id="830" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Power Electronics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng117" data-toggle="#cb_eleng117">
<h3 class="courseblocktitle">
<span class="code">EL ENG 117</span> 
<span class="title">Electromagnetic Fields and Waves</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng117">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Review of static electric and magnetic fields and applications; Maxwell's equations; transmission lines; propagation and reflection of plane waves; introduction to guided waves, microwave networks, and radiation and antennas. Minilabs on statics, transmission lines, and waves. Explanation of cellphone antennas, WiFi communication, and other wireless technologies.</span><br/>
 <a href="" class="btn-readmore"><span>Electromagnetic Fields and Waves:</span> Read More [+]</a></p>
<div id="525" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, <span class="code_bubble" data-code-bubble="MATH 53">MATH 53</span>, and <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>; <span class="code_bubble" data-code-bubble="PHYSICS 7B">PHYSICS 7B</span> or equivalent that covers AC circuits and electromagnetics up to Maxwell's equations</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 2 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion and two hours of laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Yablonovitch</p></div>
<p><a href="" class="btn-readless"><span>Electromagnetic Fields and Waves:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng118" data-toggle="#cb_eleng118">
<h3 class="courseblocktitle">
<span class="code">EL ENG 118</span> 
<span class="title">Introduction to Optical Engineering</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng118">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Optical Engineering:</span> Read More [+]</a></p>
<div id="667" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="MATH 53">MATH 53</span>; <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, or <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering 118 after taking Electrical Engineering 218A. A deficient grade in Electrical Engineering 119 may be removed by taking Electrical Engineering 118.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Waller, Kante</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Optical Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng120" data-toggle="#cb_eleng120">
<h3 class="courseblocktitle">
<span class="code">EL ENG 120</span> 
<span class="title">Signals and Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng120">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Continuous and discrete-time transform analysis techniques with illustrative applications. Linear and time-invariant systems, transfer functions. Fourier series, Fourier transform, Laplace and Z-transforms. Sampling and reconstruction. Solution of differential and difference equations using transforms. Frequency response, Bode plots, stability analysis. Illustrated by analysis of communication systems and feedback control systems.</span><br/>
 <a href="" class="btn-readmore"><span>Signals and Systems:</span> Read More [+]</a></p>
<div id="312" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 4 hours of lecture and 1 hour of recitation per week</p><!--<p class=""><strong>Additional Format:</strong> Four hours of Lecture and One hour of Recitation per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Signals and Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng121" data-toggle="#cb_eleng121">
<h3 class="courseblocktitle">
<span class="code">EL ENG 121</span> 
<span class="title">Introduction to Digital Communication Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng121">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2016, Fall 2014, Fall 2013<br/>
Introduction to the basic principles of the design and analysis of modern digital communication systems. Topics include source coding, channel coding, baseband and passband modulation techniques, receiver design, and channel equalization. Applications to design of digital telephone modems, compact disks, and digital wireless communication systems. Concepts illustrated by a sequence of MATLAB exercises.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Communication Systems:</span> Read More [+]</a></p>
<div id="449" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Communication Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng122" data-toggle="#cb_eleng122">
<h3 class="courseblocktitle">
<span class="code">EL ENG 122</span> 
<span class="title">Introduction to Communication Networks</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng122">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Spring 2020<br/>
This course focuses on the fundamentals of the wired and wireless communication networks. The course covers both the architectural principles for making these networks scalable and robust, as well as the key techniques essential for analyzing and designing them. The topics include graph theory, Markov chains, queuing, optimization techniques, the physical and link layers, switching, transport, cellular networks and Wi-Fi.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Communication Networks:</span> Read More [+]</a></p>
<div id="845" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Introduction to Communication Networks:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng123" data-toggle="#cb_eleng123">
<h3 class="courseblocktitle">
<span class="code">EL ENG 123</span> 
<span class="title">Digital Signal Processing</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng123">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Discrete time signals and systems: Fourier and Z transforms, DFT, 2-dimensional versions. Digital signal processing topics: flow graphs, realizations, FFT, chirp-Z algorithms, Hilbert transform relations, quantization effects, linear prediction. Digital filter design methods: windowing, frequency sampling, S-to-Z methods, frequency-transformation methods, optimization methods, 2-dimensional filter design.</span><br/>
 <a href="" class="btn-readmore"><span>Digital Signal Processing:</span> Read More [+]</a></p>
<div id="326" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 1 hour of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture, One hour of Discussion, and One hour of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Digital Signal Processing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng126" data-toggle="#cb_eleng126">
<h3 class="courseblocktitle">
<span class="code">EL ENG 126</span> 
<span class="title">Probability and Random Processes</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng126">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2017, Fall 2016, Spring 2016<br/>
This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains.</span><br/>
 <a href="" class="btn-readmore"><span>Probability and Random Processes:</span> Read More [+]</a></p>
<div id="440" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Probability and Random Processes:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc128" data-toggle="#cb_elengc128">
<h3 class="courseblocktitle">
<span class="code">EL ENG C128</span> 
<span class="title">Feedback Control Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc128">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Fall 2021, Spring 2021<br/>
Analysis and synthesis of linear feedback control systems in transform and time domains. Control system design by root locus, frequency response, and state space methods. Applications to electro-mechanical and mechatronics systems.</span><br/>
 <a href="" class="btn-readmore"><span>Feedback Control Systems:</span> Read More [+]</a></p>
<div id="842" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> or <span class="code_bubble" data-code-bubble="MEC ENG 100">MEC ENG 100</span>; <span class="code_bubble" data-code-bubble="MEC ENG 132">MEC ENG 132</span> or <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and three hours of laboratory and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Also listed as:</strong> MEC ENG C134</p></div>
<p><a href="" class="btn-readless"><span>Feedback Control Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng130" data-toggle="#cb_eleng130">
<h3 class="courseblocktitle">
<span class="code">EL ENG 130</span> 
<span class="title">Integrated-Circuit Devices</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng130">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Overview of electronic properties of semiconductor. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology.</span><br/>
 <a href="" class="btn-readmore"><span>Integrated-Circuit Devices:</span> Read More [+]</a></p>
<div id="905" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 130 after taking El Eng 230A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Integrated-Circuit Devices:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng134" data-toggle="#cb_eleng134">
<h3 class="courseblocktitle">
<span class="code">EL ENG 134</span> 
<span class="title">Fundamentals of Photovoltaic Devices</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng134">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
This course is designed to give an introduction to, and overview of, the fundamentals of photovoltaic devices. Students will learn how solar cells work, understand the concepts and models of solar cell device physics, and formulate and solve relevant physical problems related to photovoltaic devices. Monocrystalline, thin film and third generation solar cells will be discussed and analyzed. Light management and economic considerations in</span><span class="deschide"> a solar cell system will also be covered.</span><br/>
 <a href="" class="btn-readmore"><span>Fundamentals of Photovoltaic Devices:</span> Read More [+]</a></p>
<div id="869" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Arias</p></div>
<p><a href="" class="btn-readless"><span>Fundamentals of Photovoltaic Devices:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng137a" data-toggle="#cb_eleng137a">
<h3 class="courseblocktitle">
<span class="code">EL ENG 137A</span> 
<span class="title">Introduction to Electric Power Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng137a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
Overview of conventional electric power conversion and delivery, emphasizing a systemic understanding of the electric grid with primary focus at the transmission level, aimed toward recognizing needs and opportunities for technological innovation. Topics include aspects of a.c. system design, electric generators, components of transmission and distribution systems, power flow analysis, system planning and operation, performance measures, and limitations</span><span class="deschide"> of legacy technologies.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Electric Power Systems:</span> Read More [+]</a></p>
<div id="742" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Physics 7B; <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> von Meier</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Electric Power Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng137b" data-toggle="#cb_eleng137b">
<h3 class="courseblocktitle">
<span class="code">EL ENG 137B</span> 
<span class="title">Introduction to Electric Power Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng137b">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Spring 2022, Spring 2021<br/>
Overview of recent and potential future evolution of electric power systems with focus on new and emerging technologies for power conversion and delivery, primarily at the distribution level. Topics include power electronics applications, solar and wind generation, distribution system design and operation, electric energy storage, information management and communications, demand response, and microgrids.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Electric Power Systems:</span> Read More [+]</a></p>
<div id="370" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EL ENG 137A">EL ENG 137A</span> or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> von Meier</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Electric Power Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng140" data-toggle="#cb_eleng140">
<h3 class="courseblocktitle">
<span class="code">EL ENG 140</span> 
<span class="title">Linear Integrated Circuits</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng140">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital converters, switched capacitor filters, and</span><span class="deschide"> comparators. Hardware laboratory and design project.</span><br/>
 <a href="" class="btn-readmore"><span>Linear Integrated Circuits:</span> Read More [+]</a></p>
<div id="780" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 140 after taking El Eng 240A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture, One hour of Discussion, and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Sanders</p></div>
<p><a href="" class="btn-readless"><span>Linear Integrated Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng142" data-toggle="#cb_eleng142">
<h3 class="courseblocktitle">
<span class="code">EL ENG 142</span> 
<span class="title">Integrated Circuits for Communications</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng142">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Spring 2022<br/>
Analysis and design of electronic circuits for communication systems, with an emphasis on integrated circuits for wireless communication systems. Analysis of noise and distortion in amplifiers with application to radio receiver design. Power amplifier design with application to wireless radio transmitters. Radio-frequency mixers, oscillators, phase-locked loops, modulators, and demodulators.</span><br/>
 <a href="" class="btn-readmore"><span>Integrated Circuits for Communications:</span> Read More [+]</a></p>
<div id="358" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 142 after taking El Eng 242A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture, One hour of Discussion, and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Integrated Circuits for Communications:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng143" data-toggle="#cb_eleng143">
<h3 class="courseblocktitle">
<span class="code">EL ENG 143</span> 
<span class="title">Microfabrication Technology</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng143">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Integrated circuit device fabrication and surface micromachining technology. Thermal oxidation, ion implantation, impurity diffusion, film deposition, expitaxy, lithography, etching, contacts and interconnections, and process integration issues. Device design and mask layout, relation between physical structure and electrical/mechanical performance. MOS transistors and poly-Si surface microstructures will be fabricated in the laboratory and </span><span class="deschide">evaluated.</span><br/>
 <a href="" class="btn-readmore"><span>Microfabrication Technology:</span> Read More [+]</a></p>
<div id="715" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="PHYSICS 7B">PHYSICS 7B</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Microfabrication Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng144" data-toggle="#cb_eleng144">
<h3 class="courseblocktitle">
<span class="code">EL ENG 144</span> 
<span class="title">Fundamental Algorithms for Systems Modeling, Analysis, and Optimization</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng144">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2015, Fall 2014, Fall 2013<br/>
The modeling, analysis, and optimization of complex systems requires a range of algorithms and design software. This course reviews the fundamental techniques underlying the design methodology for complex systems, using integrated circuit design as example. Topics include design flows, discrete and continuous models and algorithms, and strategies for implementing algorithms efficiently and correctly in software. Laboratory assignments and a class</span><span class="deschide"> project will expose students to state-of-the-art tools.</span><br/>
 <a href="" class="btn-readmore"><span>Fundamental Algorithms for Systems Modeling, Analysis, and Optimization:</span> Read More [+]</a></p>
<div id="658" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="COMPSCI 70">COMPSCI 70</span>, or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 4 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Four hours of lecture per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Keutzer, Lee, Roychowdhury, Seshia</p></div>
<p><a href="" class="btn-readless"><span>Fundamental Algorithms for Systems Modeling, Analysis, and Optimization:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc145b" data-toggle="#cb_elengc145b">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145B</span> 
<span class="title">Medical Imaging Signals and Systems</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc145b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse response. This material could prepare the student</span><span class="deschide"> for a career in designing new medical imaging systems that reliably detect small tumors or infarcts.</span><br/>
 <a href="" class="btn-readmore"><span>Medical Imaging Signals and Systems:</span> Read More [+]</a></p>
<div id="386" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Prerequisites are introductory level skills in Python/Matlab; and either <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, and <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span>; or <span class="code_bubble" data-code-bubble="MATH 54">MATH 54</span>, <span class="code_bubble" data-code-bubble="BIO ENG 105">BIO ENG 105</span>, and <span class="code_bubble" data-code-bubble="BIO ENG 101">BIO ENG 101</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of Lecture and One hour of Discussion per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Conolly</p><p><strong>Also listed as:</strong> BIO ENG C165</p></div>
<p><a href="" class="btn-readless"><span>Medical Imaging Signals and Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc145l" data-toggle="#cb_elengc145l">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145L</span> 
<span class="title">Introductory Electronic Transducers Laboratory</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc145l">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2014, Fall 2013, Fall 2012<br/>
Laboratory exercises exploring a variety of electronic transducers for measuring physical quantities such as temperature, force, displacement, sound, light, ionic potential; the use of circuits for low-level differential amplification and analog signal processing; and the use of microcomputers for digital sampling and display. Lectures cover principles explored in the laboratory exercises; construction, response and signal to noise of electronic</span><span class="deschide"> transducers and actuators; and design of circuits for sensing and controlling physical quantities.</span><br/>
 <a href="" class="btn-readmore"><span>Introductory Electronic Transducers Laboratory:</span> Read More [+]</a></p>
<div id="562" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of Lecture and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Derenzo</p><p><strong>Also listed as:</strong> BIO ENG C145L</p></div>
<p><a href="" class="btn-readless"><span>Introductory Electronic Transducers Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc145m" data-toggle="#cb_elengc145m">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145M</span> 
<span class="title">Introductory Microcomputer Interfacing Laboratory</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc145m">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2013, Spring 2012, Spring 2011<br/>
Laboratory exercises constructing basic interfacing circuits and writing 20-100 line C programs for data acquisition, storage, analysis, display, and control. Use of the IBM PC with microprogrammable digital counter/timer, parallel I/O port. Circuit components include anti-aliasing filters, the S/H amplifier, A/D and D/A converters. Exercises include effects of aliasing in periodic sampling, fast Fourier transforms of basic waveforms, the</span><span class="deschide"> use of the Hanning filter for leakage reduction, Fourier analysis of the human voice, digital filters, and control using Fourier deconvolution. Lectures cover principles explored in the lab exercises and design of microcomputer-based systems for data acquisitions, analysis and control.</span><br/>
 <a href="" class="btn-readmore"><span>Introductory Microcomputer Interfacing Laboratory:</span> Read More [+]</a></p>
<div id="668" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A &amp; 16B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture and 3 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of Lecture and Three hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Derenzo</p><p><strong>Also listed as:</strong> BIO ENG C145M</p></div>
<p><a href="" class="btn-readless"><span>Introductory Microcomputer Interfacing Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengc145o" data-toggle="#cb_elengc145o">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145O</span> 
<span class="title">Laboratory in the Mechanics of Organisms</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengc145o">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2015, Spring 2014, Spring 2013, Spring 2012<br/>
Introduction to laboratory and field study of the biomechanics of animals and plants using fundamental biomechanical techniques and equipment. Course has a series of rotations involving students in experiments demonstrating how solid and fluid mechanics can be used to discover the way in which diverse organisms move and interact with their physical environment. The laboratories emphasize sampling methodology, experimental design</span><span class="deschide">, and statistical interpretation of results. Latter third of course devoted to independent research projects. Written reports and class presentation of project results are required.</span><br/>
 <a href="" class="btn-readmore"><span>Laboratory in the Mechanics of Organisms:</span> Read More [+]</a></p>
<div id="924" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="INTEGBI 135">INTEGBI 135</span> or consent of instructor. For Electrical Engineering and Computer Sciences students: <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span>, <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span> or <span class="code_bubble" data-code-bubble="COMPSCI 184">COMPSCI 184</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for C135L after taking 135L.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 6 hours of laboratory, 1 hour of discussion, and 1 hour of fieldwork per week</p><!--<p class=""><strong>Additional Format:</strong> Six hours of laboratory and one hour of discussion per week, plus one field trip.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Formerly known as:</strong> Integrative Biology 135L</p><p><strong>Also listed as:</strong> BIO ENG C136L/INTEGBI C135L</p></div>
<p><a href="" class="btn-readless"><span>Laboratory in the Mechanics of Organisms:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng146l" data-toggle="#cb_eleng146l">
<h3 class="courseblocktitle">
<span class="code">EL ENG 146L</span> 
<span class="title">Application Specific Integrated Circuits Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng146l">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2015<br/>
This is a lab course that covers the design of modern Application-Specific Integrated Circuits (ASICs). The labs lay the foundation of modern digital design by first setting-up the scripting and hardware description language base for specification of digital systems and interactions with tool flows. Software testing of digital designs is covered leading into a set of labs that cover the design flow. Digital synthesis, floorplanning, placement and routing are covered</span><span class="deschide">, as well as tools to evaluate design timing and power. Chip-level assembly is covered, instantiation of custom IP blocks: I/O pads, memories, PLLs, etc. The labs culminate with a project design – implementation of a 3-stage RISC-V processor with register file and caches.</span><br/>
 <a href="" class="btn-readmore"><span>Application Specific Integrated Circuits Laboratory:</span> Read More [+]</a></p>
<div id="498" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives &amp; Outcomes</strong></p><p><strong>Course Objectives:</strong> This course is a one-time offering to supplement the CS150 course offered in the Fall 2014, with a lab and project section that cover the Application-Specific Integrated Circuit Design. The CS150 lectures in the Fall 2014 already covered the necessary lecture material, so students who took the CS150 lab in the Fall of 2014 will have a chance to expand their skills into the area of Application-Specific Integrated Circuit design.<br/>
Hence the pre-requisite for this course is that a student has taken the CS150 course in the Fall 2014.<br/></p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>; <span class="code_bubble" data-code-bubble="EL ENG 105">EL ENG 105</span> recommended</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering 146L after taking Fall 2014 version of Electrical Engineering 141/241A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of laboratory and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Stojanovic</p></div>
<p><a href="" class="btn-readless"><span>Application Specific Integrated Circuits Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng147" data-toggle="#cb_eleng147">
<h3 class="courseblocktitle">
<span class="code">EL ENG 147</span> 
<span class="title">Introduction to Microelectromechanical Systems (MEMS)</span> 
<span class="hours">3 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng147">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical, electrical, fluidic, and thermal energy/signal domains</span><span class="deschide">, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Microelectromechanical Systems (MEMS):</span> Read More [+]</a></p>
<div id="257" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span> and <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 147 after taking El Eng 247A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Three hours of lecture and one hour of discussion per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Maharbiz, Nguyen, Pister</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Microelectromechanical Systems (MEMS):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng192" data-toggle="#cb_eleng192">
<h3 class="courseblocktitle">
<span class="code">EL ENG 192</span> 
<span class="title">Mechatronic Design Laboratory</span> 
<span class="hours">4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng192">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2021, Spring 2020, Spring 2019<br/>
Design project course, focusing on application of theoretical principles in electrical engineering to control of a small-scale system, such as a mobile robot. Small teams of students will design and construct a mechatronic system incorporating sensors, actuators, and intelligence.</span><br/>
 <a href="" class="btn-readmore"><span>Mechatronic Design Laboratory:</span> Read More [+]</a></p>
<div id="73" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> <span class="code_bubble" data-code-bubble="EECS 16A">EECS 16A</span>, <span class="code_bubble" data-code-bubble="EECS 16B">EECS 16B</span>, <span class="code_bubble" data-code-bubble="COMPSCI 61A">COMPSCI 61A</span>, <span class="code_bubble" data-code-bubble="COMPSCI 61B">COMPSCI 61B</span>, <span class="code_bubble" data-code-bubble="COMPSCI 61C">COMPSCI 61C</span>, and <span class="code_bubble" data-code-bubble="EL ENG 120">EL ENG 120</span></p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1.5 hours of lecture and 10 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> One and one-half hours of Lecture and Ten hours of Laboratory per week for 15 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Fearing</p></div>
<p><a href="" class="btn-readless"><span>Mechatronic Design Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng194" data-toggle="#cb_eleng194">
<h3 class="courseblocktitle">
<span class="code">EL ENG 194</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng194">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Fall 2022, Spring 2021<br/>
Topics will vary semester to semester. See the Electrical Engineering announcements.</span><br/>
 <a href="" class="btn-readmore"><span>Special Topics:</span> Read More [+]</a></p>
<div id="252" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> One to four hours of lecture per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Special Topics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengh196a" data-toggle="#cb_elengh196a">
<h3 class="courseblocktitle">
<span class="code">EL ENG H196A</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengh196a">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Thesis work under the supervision of a faculty member. A minimum of four units must be taken; the units may be distributed between one and two semesters in any way. To obtain credit a satisfactory thesis must be submitted at the end of the two semesters to the Electrical and Engineering and Computer Science Department archive. Students who complete four units and a thesis in one semester receive a letter grade at the end of H196A. Students</span><span class="deschide"> who do not, receive an IP in H196A and must enroll in H196B.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="681" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the Electrical Engineering and Computer Science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Individual research.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. This is part one of a year long series course. A provisional grade of IP (in progress) will be applied and later replaced with the final grade after completing part two of the series. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_elengh196b" data-toggle="#cb_elengh196b">
<h3 class="courseblocktitle">
<span class="code">EL ENG H196B</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_elengh196b">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2016, Spring 2015, Spring 2014<br/>
Thesis work under the supervision of a faculty member. A minimum of four units must be taken; the units may be distributed between one and two semesters in any way. To obtain credit a satisfactory thesis must be submitted at the end of the two semesters to the Electrical and Engineering and Computer Science Department archive. Students who complete four units and a thesis in one semester receive a letter grade at the end of H196A. Students</span><span class="deschide"> who do not, receive an IP in H196A and must enroll in H196B.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="666" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the Electrical Engineering and Computer Science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Individual research.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. This is part two of a year long series course. Upon completion, the final grade will be applied to both parts of the series. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng197" data-toggle="#cb_eleng197">
<h3 class="courseblocktitle">
<span class="code">EL ENG 197</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng197">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Fall 2022, Fall 2021<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="429" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 2-7.5 hours of fieldwork per week</p><!--<p class=""><strong>Additional Format:</strong> One to Four hour of Fieldwork per week for 15 weeks. Two to Seven and one-half hours of Fieldwork per week for 8 weeks. Two and one-half to Ten hours of Fieldwork per week for 6 weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng198" data-toggle="#cb_eleng198">
<h3 class="courseblocktitle">
<span class="code">EL ENG 198</span> 
<span class="title">Directed Group Study for Advanced Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng198">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2023, Spring 2023, Fall 2022<br/>
Group study of selected topics in electrical engineering, usually relating to new developments.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Study for Advanced Undergraduates:</span> Read More [+]</a></p>
<div id="578" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 2.0 GPA or better; 60 units completed</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p><!--<p class=""><strong>Additional Format:</strong> To vary with section.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Study for Advanced Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<button class="btn_toggleCoursebody" aria-expanded="false" aria-controls="cb_eleng199" data-toggle="#cb_eleng199">
<h3 class="courseblocktitle">
<span class="code">EL ENG 199</span> 
<span class="title">Supervised Independent Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
</button>
<div class="coursebody" aria-hidden="true" id="cb_eleng199">

<p class="courseblockdesc"><span class="descshow">Terms offered: Spring 2023, Fall 2018, Spring 2018<br/>
Supervised independent study. Enrollment restrictions apply.</span><br/>
 <a href="" class="btn-readmore"><span>Supervised Independent Study:</span> Read More [+]</a></p>
<div id="333" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor and major adviser</p><p><strong>Credit Restrictions:</strong> Enrollment is restricted; see the Introduction to Courses and Curricula section of this catalog.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"/>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"/>8 weeks - 1-4 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Individual conferences.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Supervised Independent Study:</span> Read Less [-] </a></p></div>
</div>
</div></div>
]]>
</coursestext>
<faculty>
<![CDATA[
<h2>Faculty and Instructors</h2><p class="facitem"><strong>* </strong>Indicates this faculty member is the recipient of the Distinguished Teaching Award.</p><h4>Faculty</h4><p class="facitem"><strong>Pieter Abbeel, <i>Associate Professor</i>. </strong>Artificial Intelligence (AI), Control, Intelligent Systems, and Robotics (CIR), Machine Learning.<br/><a href="http://vcresearch.berkeley.edu/faculty/pieter-abbeel"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elad Alon, <i>Professor</i>. </strong>Integrated Circuits (INC), Micro/Nano Electro Mechanical Systems (MEMS), Communications & Networking (COMNET), Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/elad-alon"target="_blank">Research Profile</a></p><p class="facitem"><strong>Venkat Anantharam, <i>Professor</i>. </strong>Communications & Networking (COMNET), Artificial Intelligence (AI), Control, Intelligent Systems, and Robotics (CIR), Security (SEC), Signal Processing (SP).<br/><a href="http://vcresearch.berkeley.edu/faculty/venkat-anantharam"target="_blank">Research Profile</a></p><p class="facitem"><strong>Murat Arcack, <i>Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR), Biosystems & Computational Biology (BIO).<br/><a href="http://vcresearch.berkeley.edu/faculty/murat-arcak"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ana Claudia Arias, <i>Associate Professor</i>. </strong>Physical Electronics (PHY), Flexible and Printed Electronics, Energy (ENE).<br/><a href="https://vcresearch.berkeley.edu/faculty/ana-claudia-arias"target="_blank">Research Profile</a></p><p class="facitem"><strong>Krste Asanovic, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC), Integrated Circuits (INC), Operating Systems & Networking (OSNT),Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/krste-asanovic"target="_blank">Research Profile</a></p><p class="facitem"><strong>Babak Ayazifar, <i>Professor</i>. </strong>Education (EDUC), Signal processing and system theory EDUCATION: Development of pedagogical techniques and assessment tools , Signal Processing (SP), Graph signal processing.</p><p class="facitem"><strong>Jonathan Bachrach, <i>Adjunct Assistant Professor</i>. </strong>Programming Systems (PS), Computer Architecture & Engineering (ARC), Design, Modeling and Analysis (DMA).</p><p class="facitem"><strong>Ruzena Bajcsy, <i>Professor</i>. </strong>Artificial Intelligence (AI), Biosystems & Computational Biology (BIO), Control, Intelligent Systems, and Robotics (CIR), Graphics (GR), Human-Computer Interaction (HCI), Computer vision, Bridging information technology to humanities and social sciences, Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/ruzena-bajcsy"target="_blank">Research Profile</a></p><p class="facitem"><strong>Brian A. Barsky, <i>Professor</i>. </strong>Computer science, geometric design and modeling, computer graphics, computer aided cornea modeling and visualization, medical imaging, virtual environments for surgical simulation.<br/><a href="http://vcresearch.berkeley.edu/node/13851"target="_blank">Research Profile</a></p><p class="facitem"><strong>Peter L. Bartlett, <i>Professor</i>. </strong>Statistics, machine learning, statistical learning theory, adaptive control.<br/><a href="http://vcresearch.berkeley.edu/node/14413"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alexandre M. Bayen, <i>Professor</i>. </strong>Transportation, modelling and control of distributed parameters systems, large scale infrastructure systems, water distribution.<br/><a href="http://vcresearch.berkeley.edu/node/14130"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jeffrey Bokor, <i>Professor</i>. </strong>Physical Electronics (PHY), Nanotechnology.<br/><a href="http://vcresearch.berkeley.edu/faculty/jeffrey-bokor"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bernhard Boser, <i>Professor</i>. </strong>Biosystems & Computational Biology (BIO), Design, Modeling and Analysis (DMA), Integrated Circuits (INC),Physical Electronics (PHY).<br/><a href="http://vcresearch.berkeley.edu/faculty/bernhard-e-boser"target="_blank">Research Profile</a></p><p class="facitem"><strong>Eric Brewer, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT), Energy (ENE), Security (SEC), Developing regions, Programming languages.<br/><a href="http://vcresearch.berkeley.edu/faculty/eric-brewer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Duncan Callaway, <i>Associate Professor</i>. </strong>Modeling and control of aggregated storage devices, power management, and system analysis of energy technologies and their impact.<br/><a href="http://vcresearch.berkeley.edu/node/14602"target="_blank">Research Profile</a></p><p class="facitem"><strong>John Canny, <i>Professor</i>. </strong>Computer science, activity-based computing, livenotes, mechatronic devices, flexonics.<br/><a href="http://vcresearch.berkeley.edu/node/14606"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jose M. Carmena, <i>Professor</i>. </strong>Brain-machine interfaces, neural ensemble computation, neuroprosthetics, sensorimotor learning and control.<br/><a href="http://vcresearch.berkeley.edu/node/14341"target="_blank">Research Profile</a></p><p class="facitem"><strong>Constance Chang-Hasnain, <i>Professor</i>. </strong>Microsystems and materials, Nano-Optoelectronic devices.</p><p class="facitem"><strong>Alessandro Chiesa, <i>Assistant Professor</i>. </strong>Security (SEC), Theory (THY).<br/><a href="https://vcresearch.berkeley.edu/faculty/alessandro-chiesa"target="_blank">Research Profile</a></p><p class="facitem"><strong>John Chuang, <i>Professor</i>. </strong>Computer networking, computer security, economic incentives, ICTD.<br/><a href="http://vcresearch.berkeley.edu/node/15010"target="_blank">Research Profile</a></p><p class="facitem"><strong>Phillip Colella, <i>Professor in Residence</i>. </strong><br/><a href="https://vcresearch.berkeley.edu/faculty/phillip-colella"target="_blank">Research Profile</a></p><p class="facitem"><strong>Steven Conolly, <i>Professor</i>. </strong>Medical imaging instrumentation and control.<br/><a href="http://vcresearch.berkeley.edu/faculty/steven-conolly"target="_blank">Research Profile</a></p><p class="facitem"><strong>Thomas Courtade, <i>Assistant Professor</i>. </strong>Communications & Networking (COMNET).<br/><a href="http://vcresearch.berkeley.edu/faculty/thomas-courtade"target="_blank">Research Profile</a></p><p class="facitem"><strong>David E. Culler, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC), Energy (ENE), Operating Systems & Networking (OSNT),Programming Systems (PS), Security (SEC), Parallel architecture, High-performance networks, Workstation clusters.<br/><a href="http://vcresearch.berkeley.edu/faculty/david-e-culler"target="_blank">Research Profile</a></p><p class="facitem"><strong>Trevor Darrell, <i>Professor in Residence</i>. </strong>Artificial Intelligence (AI), Control, Intelligent Systems, and Robotics (CIR), Computer Vision.<br/><a href="https://vcresearch.berkeley.edu/faculty/trevor-darrell"target="_blank">Research Profile</a></p><p class="facitem"><strong>James W. Demmel, <i>Professor</i>. </strong>Computer science, scientific computing, numerical analysis, linear algebra.<br/><a href="http://vcresearch.berkeley.edu/node/14088"target="_blank">Research Profile</a></p><p class="facitem"><strong>* John DeNero, <i>Assistant Teaching Professor</i>. </strong>Artificial Intelligence (AI), Education (EDUC).</p><p class="facitem"><strong>Anca Dragan, <i>Assistant Professor</i>. </strong>Artificial Intelligence (AI), Control, Intelligent Systems, and Robotics (CIR), Human-Computer Interaction (HCI).<br/><a href="https://vcresearch.berkeley.edu/faculty/anca-dragan"target="_blank">Research Profile</a></p><p class="facitem"><strong>Prabal Dutta, <i>Associate Professor</i>. </strong>Computer architecture & engineering, cyber-physical systems and design automation, energy, operating systems & networking.<br/><a href="https://vcresearch.berkeley.edu/faculty/prabal-dutta"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alexei (Alyosha) Efros, <i>Associate Professor</i>. </strong>Computer Vision, Graphics (GR), Artificial Intelligence (AI).<br/><a href="http://vcresearch.berkeley.edu/faculty/alexei-efros"target="_blank">Research Profile</a></p><p class="facitem"><strong>Laurent El Ghaoui, <i>Professor</i>. </strong>Decision-making under uncertainty, convex optimization, robust solutions, semidefinite programming, exhaustive simulation.<br/><a href="http://vcresearch.berkeley.edu/node/15019"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ronald S. Fearing, <i>Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR), Biosystems & Computational Biology (BIO).<br/><a href="https://vcresearch.berkeley.edu/faculty/ron-fearing"target="_blank">Research Profile</a></p><p class="facitem"><strong>Armando Fox, <i>Professor</i>. </strong>Programming systems (PS), Education (EDUC), Operating Systems and Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/armando-fox"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael Franklin, <i>Adjunct Professor</i>. </strong>Operating Systems & Networking (OSNT), AMPLab.</p><p class="facitem"><strong>Gerald Friedland, <i>Adjunct Assistant Professor</i>. </strong></p><p class="facitem"><strong>* Robert J. Full, <i>Professor</i>. </strong>Energetics, comparative biomechanics, arthropod, adhesion, comparative physiology, locomotion, neuromechanics, biomimicry, biological inspiration, reptile, gecko, amphibian, robots, artificial muscles.<br/><a href="http://vcresearch.berkeley.edu/node/14168"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jack L. Gallant, <i>Professor</i>. </strong>Vision science, form vision, attention, fMRI, computational neuroscience, natural scene perception, brain encoding, brain decoding.<br/><a href="http://vcresearch.berkeley.edu/node/14700"target="_blank">Research Profile</a></p><p class="facitem"><strong>Dan Garcia, <i>Teaching Professor</i>. </strong>Education (EDUC), Computational Game Theory, Graphics (GR).</p><p class="facitem"><strong>Sanjam Garg, <i>Assistant Professor</i>. </strong>Theory (THY), Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/sanjam-garg"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ali Ghodsi, <i>Adjunct Assistant Professor</i>. </strong>Database Management Systems (DBMS), Operating Systems & Networking (OSNT).</p><p class="facitem"><strong>Ken Goldberg, <i>Professor</i>. </strong>Robotics, art, social media, new media, automation.<br/><a href="http://vcresearch.berkeley.edu/node/14251"target="_blank">Research Profile</a></p><p class="facitem"><strong>Joseph Gonzalez, <i>Assistant Professor</i>. </strong>Artificial Intelligence (AI), Database Management Systems (DBMS).<br/><a href="https://vcresearch.berkeley.edu/faculty/joseph-gonzalez"target="_blank">Research Profile</a></p><p class="facitem"><strong>Moritz Hardt, <i>Assistant Profesor</i>. </strong><br/><a href="https://www2.eecs.berkeley.edu/Faculty/Homepages/mhardt.html"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bjoern Hartmann, <i>Associate Professor</i>. </strong>Human-computer interaction, user interfaces, end-user programming, design tools, prototyping, crowdsourcing, multitouch, sensing.<br/><a href="https://vcresearch.berkeley.edu/faculty/bjorn-hartmann"target="_blank">Research Profile</a></p><p class="facitem"><strong>Marti A. Hearst, <i>Professor</i>. </strong>Information retrieval, human-computer interaction, user interfaces, information visualization, web search, search user interfaces, empirical computational linguistics, natural language processing, text mining, social media.<br/><a href="http://vcresearch.berkeley.edu/node/14819"target="_blank">Research Profile</a></p><p class="facitem"><strong>Joseph M. Hellerstein, <i>Professor</i>. </strong>Database Management Systems (DBMS), Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/joseph-m-hellerstein"target="_blank">Research Profile</a></p><p class="facitem"><strong>Paul N. Hilfinger, <i>Teaching Professor</i>. </strong>Programming Systems (PS), Scientific Computing (SCI), Software engineering, Parallel programming techniques.<br/><a href="http://vcresearch.berkeley.edu/faculty/paul-n-hilfinger"target="_blank">Research Profile</a></p><p class="facitem"><strong>Joshua Hug, <i>Assistant Teaching Professor</i>. </strong>Education (EDUC), Computer Science education.</p><p class="facitem"><strong>Ali Javey, <i>Professor</i>. </strong>Physical Electronics (PHY), Energy (ENE), Micro/Nano Electro Mechanical Systems (MEMS), Nanomaterials and Nanotechnology.<br/><a href="http://vcresearch.berkeley.edu/faculty/ali-javey"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael I. Jordan, <i>Professor</i>. </strong>Computer science, artificial intelligence, bioinformatics, statistics, machine learning, electrical engineering, applied statistics, optimization.<br/><a href="http://vcresearch.berkeley.edu/node/13970"target="_blank">Research Profile</a></p><p class="facitem"><strong>Anthony D. Joseph, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT), Security (SEC), Computer and Network Security, Distributed systems, Mobile computing, Wireless networking, Software engineering, and operating systems.<br/><a href="http://vcresearch.berkeley.edu/faculty/anthony-d-joseph"target="_blank">Research Profile</a></p><p class="facitem"><strong>* Richard Karp, <i>Professor</i>. </strong>Computational molecular biology, genomics, DNA molecules, structure of genetic regulatory networks, combinatorial and statsitical methods.<br/><a href="http://vcresearch.berkeley.edu/faculty/richard-karp"target="_blank">Research Profile</a></p><p class="facitem"><strong>Randy H. Katz, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC), Operating Systems & Networking (OSNT), Distributed and networked systems design and implementation.<br/><a href="http://bnrg.eecs.berkeley.edu/~randy/"target="_blank">Research Profile</a></p><p class="facitem"><strong>Kurt Keutzer, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC), Design, Modeling and Analysis (DMA), Scientific Computing (SCI).<br/><a href="http://vcresearch.berkeley.edu/faculty/kurt-keutzer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Daniel Klein, <i>Professor</i>. </strong>Artificial Intelligence (AI), Natural Language Processing, Computational Linguistics, Machine Learning.<br/><a href="http://vcresearch.berkeley.edu/faculty/daniel-klein"target="_blank">Research Profile</a></p><p class="facitem"><strong>John D. Kubiatowicz, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT), Security (SEC), Computer architecture, Quantum computer design, Internet-scale storage systems, Peer-to-peer networking.<br/><a href="http://vcresearch.berkeley.edu/faculty/john-d-kubiatowicz"target="_blank">Research Profile</a></p><p class="facitem"><strong>Andreas Kuehlmann, <i>Adjunct Professor</i>. </strong>Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/andreas-kuehlmann"target="_blank">Research Profile</a></p><p class="facitem"><strong>Edward A. Lee, <i>Professor</i>. </strong>Embedded Software, Real-Time Systems, Cyber-Physical Systems, Concurrency, Design, Modeling and Analysis (DMA), Programming Systems (PS),Signal Processing (SP).<br/><a href="http://vcresearch.berkeley.edu/faculty/edward-lee"target="_blank">Research Profile</a></p><p class="facitem"><strong>Luke Lee, <i>Professor</i>. </strong>Biophotonics, biophysics, bionanoscience, molecular imaging, single cell analysis, bio-nano interfaces, integrated microfluidic devices (iMD) for diagnostics and preventive personalized medicine.<br/><a href="http://vcresearch.berkeley.edu/node/14953"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sergey Levine, <i>Assisstant Professor</i>. </strong>Artificial intelligence, intelligent systems and robotics.<br/><a href="https://vcresearch.berkeley.edu/faculty/sergey-levine"target="_blank">Research Profile</a></p><p class="facitem"><strong>Chunlei Liu, <i>Associate Professor</i>. </strong>Brain imaging, magnetic resonance imaging, remote neural modulation, biosystems and computational biology, signal processing.<br/><a href="https://vcresearch.berkeley.edu/faculty/chunlei-liu"target="_blank">Research Profile</a></p><p class="facitem"><strong>Tsu-Jae King Liu, <i>Professor</i>. </strong>Physical Electronics (PHY), Micro/Nano Electro Mechanical Systems (MEMS).<br/><a href="http://vcresearch.berkeley.edu/faculty/tsu-jae-king-liu"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael Lustig, <i>Associate Professor</i>. </strong>Medical Imaging, Magnetic Resonance Imaging, Signal Processing (SP), Scientific Computing (SCI), Physical Electronics (PHY), Communications & Networking (COMNET), Biosystems & Computational Biology (BIO), Control, Intelligent Systems, and Robotics (CIR).</p><p class="facitem"><strong>Michel Maharbiz, <i>Professor</i>. </strong>Neural interfaces, bioMEMS, microsystems, MEMS, microsystems for the life sciences.<br/><a href="http://vcresearch.berkeley.edu/node/15053"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jitendra Malik, <i>Professor</i>. </strong>Artificial Intelligence (AI), Biosystems & Computational Biology (BIO), Control, Intelligent Systems, and Robotics (CIR), Graphics (GR), Human-Computer Interaction (HCI), Signal Processing (SP),.<br/><a href="http://vcresearch.berkeley.edu/faculty/jitendra-malik"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elchanan Mossel, <i>Professor</i>. </strong>Applied probability, statistics, mathematics, finite markov chains, markov random fields, phlylogeny.<br/><a href="http://vcresearch.berkeley.edu/node/15148"target="_blank">Research Profile</a></p><p class="facitem"><strong>Rikky Muller, <i>Assistant Professor</i>. </strong>Integrated Circuits (INC), Biosystems & Computational Biology (BIO), Micro/Nano Electro Mechanical Systems (MEMS).<br/><a href="https://vcresearch.berkeley.edu/faculty/rikky-muller"target="_blank">Research Profile</a></p><p class="facitem"><strong>George Necula, <i>Professor</i>. </strong>Software engineering, programming systemsm, security, program analysis.<br/><a href="http://vcresearch.berkeley.edu/faculty/george-necula"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ren Ng, <i>Assistant Professor</i>. </strong>Imaging Systems, Computational Photography,, Signal Processing (SP), Optics.<br/><a href="https://vcresearch.berkeley.edu/faculty/ren-ng"target="_blank">Research Profile</a></p><p class="facitem"><strong>Clark Nguyen, <i>Professor</i>. </strong>Micro/Nano Electro Mechanical Systems (MEMS), Integrated Circuits (INC), Physical Electronics (PHY), Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/clark-nguyen"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ali Niknejad, <i>Professor</i>. </strong>Integrated Circuits (INC), Microwave and mm-Wave Circuits and Systems, Physical Electronics (PHY), Signal Processing (SP), Applied Electromagnetics, Communications & Networking (COMNET), Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/ali-m-niknejad"target="_blank">Research Profile</a></p><p class="facitem"><strong>Borivoje Nikolic, <i>Professor</i>. </strong>Integrated Circuits (INC), Communications & Networking (COMNET), Design, Modeling and Analysis (DMA), Computer Architecture & Engineering (ARC).<br/><a href="http://vcresearch.berkeley.edu/faculty/borivoje-nikolic"target="_blank">Research Profile</a></p><p class="facitem"><strong>James O'Brien, <i>Professor</i>. </strong>Computer graphics, fluid dynamics, computer simulation, physically based animation, finite element simulation, human perception, image forensics, video forensics, computer animation, special effects for film, video game technology, motion capture .<br/><a href="https://vcresearch.berkeley.edu/faculty/james-obrien"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bruno Olshausen, <i>Professor</i>. </strong>Visual perception, computational neuroscience, computational vision.<br/><a href="http://vcresearch.berkeley.edu/node/14277"target="_blank">Research Profile</a></p><p class="facitem"><strong>Abhay Parekh, <i>Adjunct Professor</i>. </strong>Communications & Networking (COMNET).</p><p class="facitem"><strong>Shyam Parekh, <i>Adjunct Associate Professor</i>. </strong>Communications & Networking (COMNET).</p><p class="facitem"><strong>Eric Paulos, <i>Associate Professor</i>. </strong>Human-Computer Interaction (HCI), New Media arts.<br/><a href="https://vcresearch.berkeley.edu/faculty/eric-paulos"target="_blank">Research Profile</a></p><p class="facitem"><strong>Vern Paxson, <i>Professor</i>. </strong>Security (SEC), Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/vern-paxson"target="_blank">Research Profile</a></p><p class="facitem"><strong>Kristofer Pister, <i>Professor</i>. </strong>Micro/Nano Electro Mechanical Systems (MEMS), Control, Intelligent Systems, and Robotics (CIR), Micro-robotics, Integrated Circuits (INC), Low-power circuits.<br/><a href="http://vcresearch.berkeley.edu/faculty/kristofer-pister"target="_blank">Research Profile</a></p><p class="facitem"><strong>* Kameshwar Poolla, <i>Professor</i>. </strong>Cybersecurity, modeling, control, renewable energy, estimation, integrated circuit design and manufacturing, smart grids.<br/><a href="http://vcresearch.berkeley.edu/node/14273"target="_blank">Research Profile</a></p><p class="facitem"><strong>Raluca Ada Popa, <i>Assistant Professor</i>. </strong>Operating Systems & Networking (OSNT), Security (SEC).<br/><a href="https://vcresearch.berkeley.edu/faculty/raluca-ada-popa"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jan M. Rabaey, <i>Professor</i>. </strong>Communications & Networking (COMNET), Design, Modeling and Analysis (DMA), Energy (ENE), Integrated Circuits (INC), Signal Processing (SP), Computer architecture.<br/><a href="http://vcresearch.berkeley.edu/faculty/jan-m-rabaey"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jonathan Ragan-Kelley, <i>Assistant Professor</i>. </strong>Graphics, programming systems, computer architecture & engineering, programming languages and compilers, image processing, high performance computing.<br/><a href="https://vcresearch.berkeley.edu/faculty/jonathan-ragan-kelley"target="_blank">Research Profile</a></p><p class="facitem"><strong>Prasad Raghavendra, <i>Associate Professor</i>. </strong>Theory (THY).<br/><a href="https://vcresearch.berkeley.edu/faculty/prasad-raghavendra"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ravi Ramamoorthi, <i>Professor</i>. </strong>Graphics (GR), Scientific Computing (SCI), Signal Processing (SP), Computer Vision.</p><p class="facitem"><strong>Kannan Ramchandran, <i>Professor</i>. </strong>Communications & Networking (COMNET), Signal Processing (SP), Control, Intelligent Systems, and Robotics (CIR).<br/><a href="http://vcresearch.berkeley.edu/faculty/kannan-ramchandran"target="_blank">Research Profile</a></p><p class="facitem"><strong>Gireeja Ranade, <i>Assistant Professor</i>. </strong></p><p class="facitem"><strong>Satish Rao, <i>Professor</i>. </strong>Biosystems & Computational Biology (BIO), Theory (THY).<br/><a href="http://vcresearch.berkeley.edu/faculty/satish-rao"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sylvia Ratnasamy, <i>Associate Professor</i>. </strong>Operating Systems & Networking (OSNT).<br/><a href="https://vcresearch.berkeley.edu/faculty/sylvia-ratnasamy"target="_blank">Research Profile</a></p><p class="facitem"><strong>Benjamin Recht, <i>Associate Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR), Signal Processing (SP), Machine Learning (ML), Optimization (OPT).<br/><a href="https://vcresearch.berkeley.edu/faculty/benjamin-recht"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jaijeet Roychowdhury, <i>Professor</i>. </strong>Design, Modeling and Analysis (DMA), Scientific Computing (SCI), Biosystems & Computational Biology (BIO).<br/><a href="https://vcresearch.berkeley.edu/faculty/jaijeet-roychowdhury"target="_blank">Research Profile</a></p><p class="facitem"><strong>Stuart Russell, <i>Professor</i>. </strong>Artificial intelligence, computational biology, algorithms, machine learning, real-time decision-making, probabilistic reasoning.<br/><a href="http://vcresearch.berkeley.edu/faculty/stuart-j-russell"target="_blank">Research Profile</a></p><p class="facitem"><strong>Anant Sahai, <i>Associate Professor</i>. </strong>Communications & Networking (COMNET), Information Theory, Cognitive Radio and Spectrum Sharing, Control, Intelligent Systems, and Robotics (CIR), Distributed and Networked Control, Signal Processing (SP), Theory (THY), Information Theory.<br/><a href="http://vcresearch.berkeley.edu/faculty/anant-sahai"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sayeef Salahuddin, <i>Associate Professor</i>. </strong>Physical Electronics (PHY), Design, Modeling and Analysis (DMA), Energy (ENE), Scientific Computing (SCI).<br/><a href="https://vcresearch.berkeley.edu/faculty/sayeef-salahuddin"target="_blank">Research Profile</a></p><p class="facitem"><strong>Seth R. Sanders, <i>Professor</i>. </strong>Energy (ENE), Control, Intelligent Systems, and Robotics (CIR), Integrated Circuits (INC), Power and electronics systems.<br/><a href="http://vcresearch.berkeley.edu/faculty/seth-r-sanders"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alberto L. Sangiovanni-Vincentelli, <i>Professor</i>. </strong>Design, Modeling and Analysis (DMA), Embedded System Design, Design methodologies and tools, Control, Intelligent Systems, and Robotics (CIR), Hybrid systems, Design methodologies and tools, Communications & Networking (COMNET), Wireless sensor network design, Design methodologies and tools.<br/><a href="http://vcresearch.berkeley.edu/faculty/alberto-sangiovanni-vincentelli"target="_blank">Research Profile</a></p><p class="facitem"><strong>S. Shankar Sastry, <i>Professor</i>. </strong>Computer science, robotics, arial robots, cybersecurity, cyber defense, homeland defense, nonholonomic systems, control of hybrid systems, sensor networks, interactive visualization, robotic telesurgery, rapid prototyping.<br/><a href="http://vcresearch.berkeley.edu/node/13862"target="_blank">Research Profile</a></p><p class="facitem"><strong>Koushik Sen, <i>Associate Professor</i>. </strong>Programming Systems (PS), Software Engineering, Programming Languages, and Formal Methods: Software Testing, Verification, Model Checking, Runtime Monitoring, Performance Evaluation, and Computational Logic , Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/koushik-sen"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sanjit Seshia, <i>Professor</i>. </strong>Electronic design automation, theory, computer security, program analysis, dependable computing, computational logic, formal methods.<br/><a href="http://vcresearch.berkeley.edu/faculty/sanjit-seshia"target="_blank">Research Profile</a></p><p class="facitem"><strong>Scott Shenker, <i>Professor</i>. </strong>Internet Architecture, Software-Defined Networks, Datacenter Infrastructure, Large-Scale Distributed Systems, Game Theory and Economics,Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/scott-shenker"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jonathan Shewchuk, <i>Professor</i>. </strong>Scientific Computing (SCI), Theory (THY), Graphics (GR).<br/><a href="http://vcresearch.berkeley.edu/faculty/jonathan-shewchuk"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alistair Sinclair, <i>Professor</i>. </strong>Theory (THY), Randomized algorithms, applied probability, statistical physics.<br/><a href="http://vcresearch.berkeley.edu/faculty/alistair-sinclair"target="_blank">Research Profile</a></p><p class="facitem"><strong>Dawn Song, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT), Security (SEC), Programming Systems (PS).<br/><a href="http://vcresearch.berkeley.edu/faculty/dawn-song"target="_blank">Research Profile</a></p><p class="facitem"><strong>Yun Song, <i>Professor</i>. </strong>Computational biology, population genomics, applied probability and statistics.<br/><a href="http://vcresearch.berkeley.edu/node/14178"target="_blank">Research Profile</a></p><p class="facitem"><strong>Costas J. Spanos, <i>Professor</i>. </strong>Energy (ENE), Integrated Circuits (INC), Physical Electronics (PHY), Semiconductor manufacturing, Solid-State Devices.<br/><a href="http://vcresearch.berkeley.edu/faculty/costas-j-spanos"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ian Stoica, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT), Security (SEC), Networking and distributed computer systems, Quality of Service (Q of S) and resources management, modeling and performance analysis.</p><p class="facitem"><strong>Vladimir Stojanovic, <i>Associate Professor</i>. </strong>Integrated Circuits (INC), Micro/Nano Electro Mechanical Systems (MEMS), Computer Architecture & Engineering (ARC), Physical Electronics (PHY), Communications & Networking (COMNET), Integrated Photonics, Circuit design with Emerging-Technologies.<br/><a href="http://vcresearch.berkeley.edu/faculty/vladimir-stojanovic"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bernd Sturmfels, <i>Professor</i>. </strong>Mathematics, combinatorics, computational algebraic geometry.<br/><a href="http://vcresearch.berkeley.edu/node/15683"target="_blank">Research Profile</a></p><p class="facitem"><strong>Vivek Subramanian, <i>Professor</i>. </strong>Physical Electronics (PHY), Energy (ENE), Integrated Circuits (INC).<br/><a href="http://vcresearch.berkeley.edu/faculty/vivek-subramanian"target="_blank">Research Profile</a></p><p class="facitem"><strong>Claire Tomlin, <i>Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR), Biosystems & Computational Biology (BIO), Control theory, hybrid and embedded systems, biological cell networks.<br/><a href="http://vcresearch.berkeley.edu/faculty/claire-tomlin"target="_blank">Research Profile</a></p><p class="facitem"><strong>Luca Trevisan, <i>Professor</i>. </strong>Theory (THY), (Computational Complexity, Randomness in Computation, Combinatorial Optimization), Security (SEC).<br/><a href="https://vcresearch.berkeley.edu/faculty/luca-trevisan"target="_blank">Research Profile</a></p><p class="facitem"><strong>Stavros Tripakis, <i>Adjunct Associate Professor</i>. </strong>Design, Modeling and Analysis (DMA), Computer-Aided System Design, Formal Methods, Verification, Synthesis, Embedded and Cyber-Physical Systems, Programming Systems (PS).</p><p class="facitem"><strong>David Tse, <i>Adjunct Professor</i>. </strong>Communications & Networking (COMNET).<br/><a href="http://vcresearch.berkeley.edu/faculty/david-tse"target="_blank">Research Profile</a></p><p class="facitem"><strong>Umesh Vazirani, <i>Professor</i>. </strong>Quantum computation, hamiltonian complexity, analysis of algorithms.<br/><a href="http://vcresearch.berkeley.edu/node/15573"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alexandra von Meier, <i>Adjunct Professor</i>. </strong>Energy (ENE), Electric Grids, Power Distribution.</p><p class="facitem"><strong>David Wagner, <i>Professor</i>. </strong>Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/david-wagner"target="_blank">Research Profile</a></p><p class="facitem"><strong>Martin Wainwright, <i>Professor</i>. </strong>Statistical machine learning, High-dimensional statistics, information theory, Optimization and algorithmss .<br/><a href="http://vcresearch.berkeley.edu/node/15701"target="_blank">Research Profile</a></p><p class="facitem"><strong>Laura Waller, <i>Associate Professor</i>. </strong>Physical Electronics (PHY), Signal Processing (SP), Computational imaging, Optics and Imaging, Biosystems & Computational Biology (BIO), Graphics (GR).<br/><a href="http://vcresearch.berkeley.edu/faculty/laura-waller"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jean Walrand, <i>Professor</i>. </strong>Communications & Networking (COMNET), Performance evaluation, Game theory.<br/><a href="http://vcresearch.berkeley.edu/faculty/jean-walrand"target="_blank">Research Profile</a></p><p class="facitem"><strong>John Wawrzynek, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC).<br/><a href="http://vcresearch.berkeley.edu/faculty/john-wawrzynek"target="_blank">Research Profile</a></p><p class="facitem"><strong>Adam Wolisz, <i>Adjunct Professor</i>. </strong>Communications & Networking (COMNET), Computer Architecture & Engineering (ARC), System Performance Evaluation.</p><p class="facitem"><strong>Ming C. Wu, <i>Professor</i>. </strong>Silicon photonics, MEMS, photonic integrated circuits, data center networks, 3D sensing, solid state LiDAR, optofluidics.<br/><a href="https://vcresearch.berkeley.edu/faculty/ming-wu"target="_blank">Research Profile</a></p><p class="facitem"><strong>Eli Yablonovitch, <i>Professor</i>. </strong>Optoelectronics Research Group, high speed optical communications, photonic crystals at optical and microwave frequencies, the milli-Volt switch, optical antennas and solar cells , Physical Electronics (PHY).<br/><a href="http://vcresearch.berkeley.edu/faculty/eli-yablonovitch"target="_blank">Research Profile</a></p><p class="facitem"><strong>Katherine A. Yelick, <i>Professor</i>. </strong>Programming Systems (PS), Scientific Computing (SCI), Biosystems & Computational Biology (BIO), parallel programming techniques.<br/><a href="http://vcresearch.berkeley.edu/faculty/katherine-yelick"target="_blank">Research Profile</a></p><p class="facitem"><strong>Nir Yosef, <i>Assistant Professor</i>. </strong>Computational biology.<br/><a href="http://vcresearch.berkeley.edu/faculty/nir-yosef"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bin Yu, <i>Professor</i>. </strong>Neuroscience, remote sensing, networks, statistical machine learning, high-dimensional inference, massive data problems, document summarization .<br/><a href="http://vcresearch.berkeley.edu/node/14282"target="_blank">Research Profile</a></p><p class="facitem"><strong>Avideh Zakhor, <i>Professor</i>. </strong>Signal Processing (SP), Artificial Intelligence (AI), Control, Intelligent Systems, and Robotics (CIR), Graphics (GR).<br/><a href="http://vcresearch.berkeley.edu/faculty/avideh-zakhor"target="_blank">Research Profile</a></p><h4>Emeritus Faculty</h4><p class="facitem"><strong>David Attwood, <i>Professor Emeritus</i>. </strong>Short wavelength electromagnetics, Soft X-ray microscopy, Coherence, EUV lithography.<br/><a href="http://vcresearch.berkeley.edu/faculty/david-attwood"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elwyn R. Berlekamp, <i>Professor Emeritus</i>. </strong>Computer science, electrical engineering, mathematics, combinatorial game theory, algebraic coding theory.<br/><a href="http://vcresearch.berkeley.edu/node/14435"target="_blank">Research Profile</a></p><p class="facitem"><strong>Manuel Blum, <i>Professor Emeritus</i>. </strong>Recursive function, cryptographic protocols, program checking.</p><p class="facitem"><strong>Robert K. Brayton, <i>Professor Emeritus</i>. </strong>Design, Modeling and Analysis (DMA), Advanced methods in combinational and sequential logic synthesis and formal verification.<br/><a href="http://vcresearch.berkeley.edu/faculty/robert-k-brayton"target="_blank">Research Profile</a></p><p class="facitem"><strong>Robert W. Brodersen, <i>Professor Emeritus</i>. </strong>Design, Modeling and Analysis (DMA), Integrated Circuits (INC), Signal Processing (SP).</p><p class="facitem"><strong>Thomas F. Budinger, <i>Professor Emeritus</i>. </strong>Image processing, biomedical electronics, quantitative aging, cardiovascular physiology, bioastronautics, image reconstruction, nuclear magnetic resonance, positron emission, tomography, reconstruction tomography, inverse problem mathematics.<br/><a href="https://www2.eecs.berkeley.edu/Faculty/Homepages/budinger.html"target="_blank">Research Profile</a></p><p class="facitem"><strong>Leon O. Chua, <i>Professor Emeritus</i>. </strong>Biosystems & Computational Biology (BIO), Control, Intelligent Systems, and Robotics (CIR), Cellular neural networks, Cellular automata, Complexity,, Nanoelectronics, Nonlinear circuits and systems, Nonlinear dynamics, Chaos,.<br/><a href="http://vcresearch.berkeley.edu/faculty/leon-o-chua"target="_blank">Research Profile</a></p><p class="facitem"><strong>Mike Clancy, <i>Professor Emeritus</i>. </strong>Science education, cognitive development, educational software.<br/><a href="http://vcresearch.berkeley.edu/faculty/michael-clancy"target="_blank">Research Profile</a></p><p class="facitem"><strong>Richard J. Fateman, <i>Professor Emeritus</i>. </strong>Artificial Intelligence (AI), Scientific Computing (SCI), Computer algebra systems, Programming environments and systems, Programming languages and compilers, Symbolic mathematical computation, Document image analysis, multimodal input of mathematics.<br/><a href="http://vcresearch.berkeley.edu/faculty/richard-j-fateman"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jerome A. Feldman, <i>Professor Emeritus</i>. </strong>Artificial Intelligence (AI), Biosystems & Computational Biology (BIO), Security (SEC), cognitive science.<br/><a href="http://vcresearch.berkeley.edu/faculty/jerome-feldman"target="_blank">Research Profile</a></p><p class="facitem"><strong>Domenico Ferrari, <i>Professor Emeritus</i>. </strong>UC Berkeley Unix Project, high-speed network testbeds and the design of real-time communication services and network protocols for multimedia traffic.</p><p class="facitem"><strong>Susan L. Graham, <i>Professor Emeritus</i>. </strong>Graphics (GR), Human-Computer Interaction (HCI), Programming Systems (PS), Scientific Computing (SCI), Software development environments, software engineering.<br/><a href="http://vcresearch.berkeley.edu/faculty/susan-l-graham"target="_blank">Research Profile</a></p><p class="facitem"><strong>Paul R. Gray, <i>Professor Emeritus</i>. </strong>Design, Modeling and Analysis (DMA), Integrated Circuits (INC).<br/><a href="http://vcresearch.berkeley.edu/faculty/paul-r-gray"target="_blank">Research Profile</a></p><p class="facitem"><strong>T. Kenneth Gustafson, <i>Professor Emeritus</i>. </strong>Solid-State Devices, Basic electromagnetic and quantum applications.</p><p class="facitem"><strong>Michael A. Harrison, <i>Professor Emeritus</i>. </strong>Multimedia, User interfaces, Software environments.</p><p class="facitem"><strong>Brian K. Harvey, <i>Professor Emeritus</i>. </strong>Education (EDUC).<br/><a href="http://vcresearch.berkeley.edu/faculty/brian-harvey"target="_blank">Research Profile</a></p><p class="facitem"><strong>David A. Hodges, <i>Professor Emeritus</i>. </strong>Integrated Circuits (INC).</p><p class="facitem"><strong>Chenming Hu, <i>Professor Emeritus</i>. </strong>Semiconductor Device Technologies.<br/><a href="http://vcresearch.berkeley.edu/faculty/chenming-calvin-hu"target="_blank">Research Profile</a></p><p class="facitem"><strong>William M. Kahan, <i>Professor Emeritus</i>. </strong>Computer Architecture & Engineering (ARC), Scientific Computing (SCI), Computer architecture, Scientific computing, Numerical analysis.<br/><a href="http://vcresearch.berkeley.edu/faculty/william-m-kahan"target="_blank">Research Profile</a></p><p class="facitem"><strong>Edward L. Keller, <i>Professor Emeritus</i>. </strong>Computational neuroscience, bioengineering, neurophysiology of the oculomotor system.</p><p class="facitem"><strong>Kam Y. Lau, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET), Optoelectronic devices, Microwave and millimeter wave signal transport over optical fiber links.<br/><a href="http://vcresearch.berkeley.edu/faculty/kam-y-lau"target="_blank">Research Profile</a></p><p class="facitem"><strong>Edwin R. Lewis, <i>Professor Emeritus</i>. </strong><br/><a href="http://vcresearch.berkeley.edu/faculty/edwin-r-lewis"target="_blank">Research Profile</a></p><p class="facitem"><strong>Allan J. Lichtenberg, <i>Professor Emeritus</i>. </strong>Nano-Optoelectronics, Electromagnetics/Plasmas, Energy (ENE).<br/><a href="http://vcresearch.berkeley.edu/faculty/allan-j-lichtenberg"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael A. Lieberman, <i>Professor Emeritus</i>. </strong>Plasma-assisted materials processing, Energy (ENE).<br/><a href="http://vcresearch.berkeley.edu/faculty/michael-lieberman"target="_blank">Research Profile</a></p><p class="facitem"><strong>Kenneth K. Mei, <i>Professor Emeritus</i>. </strong>Nano-Optoelectronics, Electromagnetics/Plasmas.</p><p class="facitem"><strong>David G. Messerschmitt, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET), Signal Processing (SP), Business and economics issues in the software industry.</p><p class="facitem"><strong>Robert G. Meyer, <i>Professor Emeritus</i>. </strong>Integrated Circuits (INC).<br/><a href="http://vcresearch.berkeley.edu/faculty/robert-g-meyer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Nelson Morgan, <i>Professor Emeritus</i>. </strong>Signal Processing (SP).</p><p class="facitem"><strong>* Richard Muller, <i>Professor Emeritus</i>. </strong>Astrophysics, geophysics, physics, elementary particle physics, cosmic micro wave background, supernovae for cosmology, origin of the earth's magnetic flips, Nemesis theory, glacial cycles, red sprites, lunar impacts, iridium measurement.<br/><a href="http://vcresearch.berkeley.edu/node/15154"target="_blank">Research Profile</a></p><p class="facitem"><strong>Andrew R. Neureuther, <i>Professor Emeritus</i>. </strong>Integrated Circuits (INC), Solid-State Devices.<br/><a href="http://vcresearch.berkeley.edu/faculty/andrew-r-neureuther"target="_blank">Research Profile</a></p><p class="facitem"><strong>William G. Oldham, <i>Professor Emeritus</i>. </strong>Integrated circuits, Semiconductor manufacturing.<br/><a href="http://vcresearch.berkeley.edu/faculty/william-g-oldham"target="_blank">Research Profile</a></p><p class="facitem"><strong>Beresford N. Parlett, <i>Professor Emeritus</i>. </strong></p><p class="facitem"><strong>David A. Patterson, <i>Professor Emeritus</i>. </strong>Professor in the Graduate School: Computer Architecture & Engineering (ARC), Computer Architecture and Systems: Parallel Computing performance, correctness, productivity,Biosystems & Computational Biology (BIO), Cancer tumor genomics, Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/david-patterson"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elijah Polak, <i>Professor Emeritus</i>. </strong>Control, Intelligent Systems, and Robotics (CIR), Numerical methods for engineering optimization.<br/><a href="http://vcresearch.berkeley.edu/faculty/elijah-polak"target="_blank">Research Profile</a></p><p class="facitem"><strong>Chittoor V. Ramamoorthy, <i>Professor Emeritus</i>. </strong>Software engineering.</p><p class="facitem"><strong>Lawrence A. Rowe, <i>Professor Emeritus</i>. </strong>Multimedia Technology.<br/><a href="http://vcresearch.berkeley.edu/faculty/lawrence-rowe"target="_blank">Research Profile</a></p><p class="facitem"><strong>Steven E. Schwarz, <i>Professor Emeritus</i>. </strong>Solid-State Devices, Nano-Optoelectronics, Electromagnetics/Plasmas.</p><p class="facitem"><strong>Carlo H. Sequin, <i>Professor Emeritus</i>. </strong>Geometric modeling, Artistic geometry, Mathematical visualizations , Graphics (GR), Human-Computer Interaction (HCI), CAD tools.</p><p class="facitem"><strong>Jerome R. Singer, <i>Professor Emeritus</i>. </strong></p><p class="facitem"><strong>Alan J. Smith, <i>Professor Emeritus</i>. </strong>Computer Architecture & Engineering (ARC), Operating Systems & Networking (OSNT), Computer System Performance Analysis, I/O Systems, Cache Memories, Memory Systems.</p><p class="facitem"><strong>Michael Stonebraker, <i>Professor Emeritus</i>. </strong>Database Technology.</p><p class="facitem"><strong>Aram J. Thomasian, <i>Professor Emeritus</i>. </strong><br/><a href="http://vcresearch.berkeley.edu/faculty/aram-thomasian"target="_blank">Research Profile</a></p><p class="facitem"><strong>Theodore Van Duzer, <i>Professor Emeritus</i>. </strong>Superconductor Electronics.<br/><a href="http://vcresearch.berkeley.edu/faculty/theodore-van-duzer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Pravin Varaiya, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET), Control, Intelligent Systems, and Robotics (CIR), Energy (ENE), Control, Networks, Power systems, Transportation.</p><p class="facitem"><strong>William J. (Jack) Welch, <i>Professor Emeritus</i>. </strong>Nano-Optoelectronics, Electromagnetics/Plasmas.<br/><a href="http://vcresearch.berkeley.edu/faculty/william-j-welch"target="_blank">Research Profile</a></p><p class="facitem"><strong>Richard M. White, <i>Professor Emeritus</i>. </strong>Energy (ENE), Solid-State Devices.</p><p class="facitem"><strong>Eugene Wong, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET).<br/><a href="http://vcresearch.berkeley.edu/faculty/eugene-wong"target="_blank">Research Profile</a></p><p class="facitem"><strong>Felix F. Wu, <i>Professor Emeritus</i>. </strong>Electric power systems analysis, generation and transmission systems planning and investment, power system control and communications, electric energy industry restructuring .<br/><a href="http://vcresearch.berkeley.edu/faculty/felix-f-wu"target="_blank">Research Profile</a></p><p class="facitem"><strong>Lotfi A. Zadeh, <i>Professor Emeritus</i>. </strong>Artificial intelligence, linguistics, control theory, logic, fuzzy sets, decision analysis, expert systems neural networks, soft computing, computing with words, computational theory of perceptions and precisiated natural language.<br/><a href="http://vcresearch.berkeley.edu/faculty/lotfi-zadeh"target="_blank">Research Profile</a></p>]]>
</faculty>
</courseleaf>

